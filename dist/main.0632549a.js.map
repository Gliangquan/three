{"version":3,"sources":["../node_modules/three/build/three.module.js","main/main.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_readOnlyError","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_toPrimitive","toPrimitive","String","Number","REVISION","exports","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AgXToneMapping","NeutralToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","UnsignedInt5999Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","BasicDepthPacking","RGBADepthPacking","RGBDepthPacking","RGDepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","LinearDisplayP3ColorSpace","LinearTransfer","SRGBTransfer","Rec709Primaries","P3Primaries","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","undefined","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","lerp","damp","lambda","dt","exp","pingpong","arguments","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","b","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","probeAsync","gl","sync","interval","reject","probe","clientWaitSync","SYNC_FLUSH_COMMANDS_BIT","WAIT_FAILED","TIMEOUT_EXPIRED","setTimeout","toNormalizedProjectionMatrix","projectionMatrix","toReversedProjectionMatrix","isPerspectiveMatrix","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","COLOR_SPACES","_defineProperty","transfer","primaries","luminanceCoefficients","toReference","color","fromReference","convertSRGBToLinear","convertLinearToSRGB","SUPPORTED_WORKING_COLOR_SPACES","Set","ColorManagement","enabled","_workingColorSpace","workingColorSpace","colorSpace","has","concat","convert","sourceColorSpace","targetColorSpace","sourceToReference","targetFromReference","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","getTransfer","getLuminanceCoefficients","SRGBToLinear","LinearToSRGB","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","dataReady","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","_EventDispatcher","_this2","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","_callSuper","isTexture","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","pmremVersion","_inherits","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","generator","dispose","transformUv","uv","Vector4","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","setFromMatrixPosition","getZ","getW","_context3","RenderTarget","_EventDispatcher2","_this3","options","isRenderTarget","depth","scissor","scissorTest","viewport","assign","depthBuffer","stencilBuffer","resolveDepthBuffer","resolveStencilBuffer","depthTexture","samples","count","texture","setSize","il","WebGLRenderTarget","_RenderTarget","_this4","isWebGLRenderTarget","DataArrayTexture","_Texture","_this5","isDataArrayTexture","wrapR","layerUpdates","addLayerUpdate","layerIndex","clearLayerUpdates","clear","WebGLArrayRenderTarget","_WebGLRenderTarget","_this6","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_this7","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_this8","isWebGL3DRenderTarget","Quaternion","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","theta1","theta2","x0","r1","r2","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$3","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$4","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","zInv","_matrix$2","_quaternion$3","Euler","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$3","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","_childaddedEvent","child","_childremovedEvent","Object3D","_EventDispatcher3","_this9","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","error","removeFromParent","remove","apply","_toConsumableArray","attach","getObjectById","id","getObjectByProperty","getObjectByName","getObjectsByProperty","result","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxInstanceCount","_maxInstanceCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","_colorsTexture","colorsTexture","boundingSphere","serialize","library","element","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$2","_v1$3","_v2$2","_v3$2","_vab","_vac","_vbc","_vap","_vbp","_vcp","_v40","_v41","_v42","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","getInterpolatedAttribute","attr","i3","barycoord","_colorKeywords","_hslA","_hslB","hue2rgb","Color","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","_materialId","Material","_EventDispatcher4","_this10","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","dispersion","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapRotation","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","onBuild","MeshBasicMaterial","_Material","_this11","isMeshBasicMaterial","_superPropGet","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","updateRanges","gpuType","onUploadCallback","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","Uint8BufferAttribute","_BufferAttribute2","Uint8ClampedBufferAttribute","_BufferAttribute3","Int16BufferAttribute","_BufferAttribute4","Uint16BufferAttribute","_BufferAttribute5","Int32BufferAttribute","_BufferAttribute6","Uint32BufferAttribute","_BufferAttribute7","Float16BufferAttribute","_BufferAttribute8","_this12","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_id$2","_m1$2","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","_EventDispatcher5","_this13","isBufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","normalAttribute","uvAttribute","tangentAttribute","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","normals","toNonIndexed","convertBufferAttribute","indices","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_this14","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","uv1","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection$1","BoxGeometry","_BufferGeometry","_this15","widthSegments","heightSegments","depthSegments","scope","vertices","uvs","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","currentRenderTarget","getRenderTarget","outputColorSpace","isXRRenderTarget","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_this16","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","clipCullDistance","multiDraw","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_this17","_v3$1","_minTarget","_maxTarget","PerspectiveCamera","_Camera","_this18","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","getViewBounds","minTarget","maxTarget","getViewSize","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","renderTarget","_this19","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","err","_iterator2","_step2","scene","_this$children","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","needsPMREMUpdate","CubeTexture","_Texture3","_this20","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget3","_this21","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$5","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","buffers","WeakMap","createBuffer","bufferType","byteLength","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","sort","mergeIndex","previousRange","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_this22","width_half","height_half","segment_width","segment_height","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","batching_pars_vertex","batching_vertex","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphinstance_vertex","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowIntensity","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","backgroundRotation","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","_e1$1","_m1$1","WebGLBackground","cubemaps","cubeuvmaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","getBackground","usePMREM","forceClear","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","setTest","setMask","autoClearColor","autoClearDepth","autoClearStencil","addToRenderList","renderList","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","vao","bindVertexArray","deleteVertexArrayObject","deleteVertexArray","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","vertexAttribDivisor","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","drawArraysInstanced","renderMultiDraw","starts","counts","drawCount","extension","multiDrawArraysWEBGL","elementCount","renderMultiDrawInstances","multiDrawArraysInstancedWEBGL","WebGLCapabilities","utils","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","textureFormatReadable","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","textureTypeReadable","textureType","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","maxPrecision","logarithmicDepthBuffer","reverseDepthBuffer","ext","clipControlEXT","LOWER_LEFT_EXT","ZERO_TO_ONE_EXT","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","maxSamples","MAX_SAMPLES","isWebGL2","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_this23","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","_oldActiveCubeFace","_oldActiveMipmapLevel","_oldXrEnabled","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","currentPMREMVersion","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","isInstancedBufferGeometry","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","drawElementsInstanced","multiDrawElementsWEBGL","multiDrawElementsInstancedWEBGL","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","WebGLMorphtargets","capabilities","morphTextures","morph","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphTexture","getUniforms","setValue","morphInfluencesSum","morphBaseInfluence","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","DepthTexture","_Texture4","_this24","isDepthTexture","compareFunction","emptyTexture","emptyShadowTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","emptyTexture2D","SAMPLER_2D_SHADOW","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","COMPLETION_STATUS_KHR","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","workingPrimaries","encodingPrimaries","gamutMapping","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","_v0$1","getLuminanceFunction","generateVertexExtensions","chunks","extensionClipCullDistance","extensionMultiDraw","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","envMapCubeUVHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customVertexExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderType","shaderName","batching","batchingColor","instancing","instancingColor","instancingMorph","useFog","fogExp2","normalMapObjectSpace","normalMapTangentSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","numLightProbes","decodeVideoTexture","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","onFirstUse","self","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","programReady","rendererExtensionParallelShaderCompile","isReady","destroy","deleteProgram","usedTimes","_id$1","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator3","_step3","shaderStage","code","getVertexShaderID","getFragmentShaderID","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","_activeChannels","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","shaderID","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","IS_BATCHEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_DISPERSION","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","supportsVertexTextures","isFogExp2","directional","spot","rectArea","hemi","shadowMap","isVideoTexture","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","transmissionRenderTarget","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_this25","isMeshDepthMaterial","_Material4","_this26","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","_previousType","activeCubeFace","_state","setBlending","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","onMaterialDispose","shadowCamera","k","kl","depthMaterial","shadowMaterial","reversedFuncs","WebGLState","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","DepthBuffer","reversed","currentDepthMask","currentDepthFunc","currentDepthClear","setReversed","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentBlendColor","currentBlendAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","drawBuffers","COLOR_ATTACHMENT0","BACK","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","contain","imageAspect","cover","getByteLength","typeByteLength","getTextureTypeByteLength","TextureUtils","WebGLTextures","_gl","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_imageDimensions","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsNewCanvas","maxSize","getDimensions","VideoFrame","textureNeedsGenerateMipmaps","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RG_INTEGER","RG8UI","RG16UI","RG32UI","RG8I","RG16I","RG32I","RGB_INTEGER","RGB8UI","RGB16UI","RGB32UI","RGB8I","RGB16I","RGB32I","RGBA_INTEGER","RGBA8UI","RGBA16UI","RGBA32UI","RGBA8I","RGBA16I","RGBA32I","RGB","UNSIGNED_INT_5_9_9_9_REV","RGB9_E5","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getInternalDepthFormat","useStencil","depthType","glInternalFormat","DEPTH24_STENCIL8","DEPTH32F_STENCIL8","DEPTH_COMPONENT24","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","getMipLevels","isFramebufferTexture","isCompressedTexture","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","level","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","texturePrimaries","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","verifyColorSpace","mipmap","useTexStorage","allocateMemory","levels","layerByteLength","_iterator4","_step4","layerData","subarray","_iterator5","_step5","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","glAttachmentType","DEPTH_STENCIL_ATTACHMENT","DEPTH_ATTACHMENT","isUseMultisampledRTT","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__boundDepthTexture","__depthDisposeCallback","disposeEvent","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","invalidationArrayRead","invalidationArrayDraw","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","depthStyle","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","blitFramebuffer","invalidateFramebuffer","__useRenderToTexture","naturalWidth","naturalHeight","displayWidth","displayHeight","WebGLUtils","ALPHA","LUMINANCE","LUMINANCE_ALPHA","DEPTH_COMPONENT","DEPTH_STENCIL","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","ArrayCamera","_PerspectiveCamera","_this27","isArrayCamera","Group","_Object3D4","_this28","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator6","_step6","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator7","_step7","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","_occlusion_vertex","_occlusion_fragment","WebXRDepthSensing","depthNear","depthFar","depthData","texProps","getMesh","cameraXR","depthColor","depthWidth","depthHeight","getDepthTexture","WebXRManager","_EventDispatcher6","_this29","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","depthSensing","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","currentSize","currentPixelRatio","cameraL","cameraR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setPixelRatio","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","getPixelRatio","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","scaleFactor","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","ignoreDepthValues","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","updateUserCamera","getCamera","getFoveation","fixedFoveation","hasDepthSensing","getDepthSensingMesh","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","enabledFeatures","includes","getDepthInformation","isValid","detectedPlanes","_e1","_m1","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","uniformArray","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","indexArray","indexString","cachedObject","chunkSize","chunkOffset","chunkPadding","boundary","chunkStart","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","WebGLRenderingContext","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","_outputColorSpace","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_currentProjectionMatrix","_projScreenMatrix","_vector3","_vector4","_emptyScene","overrideMaterial","_renderBackground","getTargetPixelRatio","contextName","contextAttributes","onContextLost","onContextRestore","onContextCreationError","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","isLineSegments","isLineLoop","isSprite","_multiDrawInstances","_multiDrawStarts","_multiDrawCounts","_multiDrawCount","prepareMaterial","getProgram","targetScene","material2","compileAsync","checkMaterialsReady","depthSensingMesh","projectObject","opaqueObjects","transmissiveObjects","camera2","renderTransmissionPass","renderScene","isLOD","transparentObjects","renderObjects","activeViewport","currentToneMapping","currentCameraViewport","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","environmentRotation","updateCommonMaterialProperties","needsLights","materialNeedsLights","uniformsList","getUniformList","progUniforms","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","_indirectTexture","isMeshGouraudMaterial","environmentIntensity","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","readPixels","readRenderTargetPixelsAsync","_ref2","_callee2","glBuffer","currFramebuffer","_callee2$","_context9","PIXEL_PACK_BUFFER","STREAM_READ","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","getBufferSubData","deleteSync","_x4","_x5","_x6","_x7","_x8","_x9","_x10","copyFramebufferToTexture","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","srcRegion","dstPosition","minX","minY","dstX","dstY","currentUnpackRowLen","UNPACK_ROW_LENGTH","currentUnpackImageHeight","UNPACK_IMAGE_HEIGHT","currentUnpackSkipPixels","UNPACK_SKIP_PIXELS","currentUnpackSkipRows","UNPACK_SKIP_ROWS","currentUnpackSkipImages","UNPACK_SKIP_IMAGES","copyTextureToTexture3D","minZ","dstZ","glTarget","initRenderTarget","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","drawingBufferColorSpace","unpackColorSpace","FogExp2","Fog","Scene","_Object3D5","_this30","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_this31","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_this32","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_this33","_currentLevel","addLevel","hysteresis","removeLevel","removedElements","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","_sphere$4","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_this34","bindMatrixInverse","applyBoneTransform","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","Bone","_Object3D8","_this35","isBone","DataTexture","_Texture5","_this36","_offsetMatrix","_identityMatrix$1","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute10","_this37","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$3","InstancedMesh","_Mesh2","_this38","setMatrixAt","getMatrixAt","getColorAt","getMorphAt","dataIndex","raycastTimes","instanceId","setColorAt","setMorphAt","sortOpaque","sortTransparent","MultiDrawRenderList","pool","item","_matrix$1","_invMatrixWorld","_identityMatrix","_whiteColor","_projScreenMatrix$2","_box$1","_sphere$2","_vector$5","_forward","_temp","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","BatchedMesh","_Mesh3","_this39","customSort","_drawInfo","_availableInstanceIds","_visibilityChanged","_initMatricesTexture","_initIndirectTexture","matricesArray","indirectArray","indirectTexture","_initColorsTexture","colorsArray","_initializeGeometry","reference","attributeName","srcAttribute","dstAttribute","_validateGeometry","batchGeometry","Boolean","setCustomSort","func","drawInfo","getBoundingBoxAt","getBoundingSphereAt","addInstance","atCapacity","instanceDrawInfo","drawId","addGeometry","indexCount","reservedRange","vertexStart","indexStart","lastRange","hasIndex","setGeometryAt","dstIndex","srcIndex","posAttr","deleteInstance","iv","setVisibleAt","getVisibleAt","setGeometryIdAt","getGeometryIdAt","getGeometryRangeAt","batchId","_objectSpread","inf","multiDrawStarts","multiDrawCounts","culled","_Material6","_this40","linecap","linejoin","_vStart","_vEnd","_inverseMatrix$1","_ray$1","_sphere$1","_intersectPointOnRay","_intersectPointOnSegment","Line","_Object3D9","_this41","computeLineDistances","lineDistances","localThreshold","localThresholdSq","checkIntersection","thresholdSq","distSq","_start","_end","LineSegments","_Line","_this42","LineLoop","_Line2","_this43","_Material7","_this44","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_this45","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","video","_this46","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_this47","CompressedTexture","_Texture8","_this48","CompressedArrayTexture","_CompressedTexture","_this49","CompressedCubeTexture","_CompressedTexture2","_this50","isCompressedCubeTexture","CanvasTexture","_Texture9","_this51","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","tangents","binormals","vec","mat","MAX_VALUE","EllipseCurve","_Curve","_this52","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","aRadius","_this53","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_this54","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_this55","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_this56","isCubicBezierCurve3","LineCurve","_Curve5","_this57","isLineCurve","LineCurve3","_Curve6","_this58","isLineCurve3","QuadraticBezierCurve","_Curve7","_this59","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_this60","isQuadraticBezierCurve3","SplineCurve","_Curve9","_this61","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_this62","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_this63","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_this64","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_this65","capSegments","radialSegments","CircleGeometry","_BufferGeometry4","_this66","thetaStart","thetaLength","segment","CylinderGeometry","_BufferGeometry5","_this67","radiusTop","radiusBottom","openEnded","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_this68","PolyhedronGeometry","_BufferGeometry6","_this69","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_this70","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_this71","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_this72","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_this73","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_this74","OctahedronGeometry","_PolyhedronGeometry3","_this75","RingGeometry","_BufferGeometry9","_this76","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_this77","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_this78","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_this79","TorusGeometry","_BufferGeometry12","_this80","tube","tubularSegments","TorusKnotGeometry","_BufferGeometry13","_this81","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_this82","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_this83","edges","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_this84","RawShaderMaterial","_ShaderMaterial","_this85","_Material9","_this86","_MeshStandardMaterial","_this87","_anisotropy","_clearcoat","_dispersion","_iridescence","_sheen","_transmission","_Material10","_this88","_Material11","_this89","_Material12","_this90","_Material13","_this91","_Material14","_this92","_LineBasicMaterial","_this93","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","shift","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_this94","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","ColorKeyframeTrack","_KeyframeTrack2","NumberKeyframeTrack","_KeyframeTrack3","QuaternionLinearInterpolant","_Interpolant4","QuaternionKeyframeTrack","_KeyframeTrack4","StringKeyframeTrack","_KeyframeTrack5","VectorKeyframeTrack","_KeyframeTrack6","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","response","_this95","_wrapNativeSuper","FileLoader","_Loader","_this96","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","_ref3","close","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","CompressedTextureLoader","_Loader3","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","urls","DataTextureLoader","_Loader6","texData","TextureLoader","_Loader7","Light","_Object3D11","_this97","HemisphereLight","_Light","_this98","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_this99","isSpotLightShadow","SpotLight","_Light2","_this100","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_this101","_cubeDirections","_cubeUps","PointLight","_Light3","_this102","DirectionalLightShadow","_LightShadow3","_this103","isDirectionalLightShadow","DirectionalLight","_Light4","_this104","AmbientLight","_Light5","_this105","RectAreaLight","_Light6","_this106","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_this107","MaterialLoader","_Loader8","_this108","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_this109","BufferGeometryLoader","_Loader9","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_loadAsync","_callee3","_callee3$","_context10","parseAsync","_x14","_x15","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","bindLightTargets","hasImages","_parseAsync","_callee4","_callee4$","_context11","parseImagesAsync","_x16","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee6","_deserializeImage","_deserializedImage2","_callee6$","_context13","_deserializeImage3","_callee5","_url","_callee5$","_context12","_deserializeImage2","_x18","_x17","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_this110","isImageBitmapLoader","createImageBitmap","setOptions","imageBitmap","fetchOptions","promise","res","colorSpaceConversion","_context","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","bufferCopy","decodeAudioData","audioBuffer","handleError","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_this111","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_this112","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_this113","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_objects","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_this114","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","_id","UniformsGroup","_EventDispatcher8","_this115","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_this116","GLBufferAttribute","setType","setItemSize","setCount","_matrix","Raycaster","setFromCamera","coords","setFromXRController","intersectObject","ascSort","intersectObjects","propagate","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","Matrix2","isMatrix2","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_this117","positions","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_this118","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh4","sphereSize","_this119","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_this120","GridHelper","_LineSegments2","_this121","PolarGridHelper","_LineSegments3","_this122","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_this123","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_this124","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_this125","Box3Helper","_LineSegments6","_this126","PlaneHelper","_Line3","_this127","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_this128","headLength","headWidth","setDirection","setColor","AxesHelper","_LineSegments7","_this129","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","Controls","_EventDispatcher9","_this130","mouseButtons","touches","TWO","WebGLMultipleRenderTargets","_WebGLRenderTarget4","_this131","isWebGLMultipleRenderTargets","revision","__THREE__","THREE","_interopRequireWildcard","require","_getRequireWildcardCache","__esModule","default","getOwnPropertyDescriptor"],"mappings":"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,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI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","file":"main.0632549a.js","sourceRoot":"../src","sourcesContent":["/**\n * @license\n * Copyright 2010-2024 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '169';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AgXToneMapping = 6;\nconst NeutralToneMapping = 7;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst UnsignedInt5999Type = 35902;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBIntegerFormat = 1032;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst RGBDepthPacking = 3202;\nconst RGDepthPacking = 3203;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\nconst LinearDisplayP3ColorSpace = 'display-p3-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst Rec709Primaries = 'rec709';\nconst P3Primaries = 'p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\nfunction probeAsync( gl, sync, interval ) {\n\n\treturn new Promise( function ( resolve, reject ) {\n\n\t\tfunction probe() {\n\n\t\t\tswitch ( gl.clientWaitSync( sync, gl.SYNC_FLUSH_COMMANDS_BIT, 0 ) ) {\n\n\t\t\t\tcase gl.WAIT_FAILED:\n\t\t\t\t\treject();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.TIMEOUT_EXPIRED:\n\t\t\t\t\tsetTimeout( probe, interval );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tresolve();\n\n\t\t\t}\n\n\t\t}\n\n\t\tsetTimeout( probe, interval );\n\n\t} );\n\n}\n\nfunction toNormalizedProjectionMatrix( projectionMatrix ) {\n\n\tconst m = projectionMatrix.elements;\n\n\t// Convert [-1, 1] to [0, 1] projection matrix\n\tm[ 2 ] = 0.5 * m[ 2 ] + 0.5 * m[ 3 ];\n\tm[ 6 ] = 0.5 * m[ 6 ] + 0.5 * m[ 7 ];\n\tm[ 10 ] = 0.5 * m[ 10 ] + 0.5 * m[ 11 ];\n\tm[ 14 ] = 0.5 * m[ 14 ] + 0.5 * m[ 15 ];\n\n}\n\nfunction toReversedProjectionMatrix( projectionMatrix ) {\n\n\tconst m = projectionMatrix.elements;\n\tconst isPerspectiveMatrix = m[ 11 ] === - 1;\n\n\t// Reverse [0, 1] projection matrix\n\tif ( isPerspectiveMatrix ) {\n\n\t\tm[ 10 ] = - m[ 10 ] - 1;\n\t\tm[ 14 ] = - m[ 14 ];\n\n\t} else {\n\n\t\tm[ 10 ] = - m[ 10 ];\n\t\tm[ 14 ] = - m[ 14 ] + 1;\n\n\t}\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().set(\n\t0.8224621, 0.177538, 0.0,\n\t0.0331941, 0.9668058, 0.0,\n\t0.0170827, 0.0723974, 0.9105199,\n);\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().set(\n\t1.2249401, - 0.2249404, 0.0,\n\t- 0.0420569, 1.0420571, 0.0,\n\t- 0.0196376, - 0.0786361, 1.0982735\n);\n\n/**\n * Defines supported color spaces by transfer function and primaries,\n * and provides conversions to/from the Linear-sRGB reference space.\n */\nconst COLOR_SPACES = {\n\t[ LinearSRGBColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\tluminanceCoefficients: [ 0.2126, 0.7152, 0.0722 ],\n\t\ttoReference: ( color ) => color,\n\t\tfromReference: ( color ) => color,\n\t},\n\t[ SRGBColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\tluminanceCoefficients: [ 0.2126, 0.7152, 0.0722 ],\n\t\ttoReference: ( color ) => color.convertSRGBToLinear(),\n\t\tfromReference: ( color ) => color.convertLinearToSRGB(),\n\t},\n\t[ LinearDisplayP3ColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: P3Primaries,\n\t\tluminanceCoefficients: [ 0.2289, 0.6917, 0.0793 ],\n\t\ttoReference: ( color ) => color.applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ),\n\t},\n\t[ DisplayP3ColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: P3Primaries,\n\t\tluminanceCoefficients: [ 0.2289, 0.6917, 0.0793 ],\n\t\ttoReference: ( color ) => color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB(),\n\t},\n};\n\nconst SUPPORTED_WORKING_COLOR_SPACES = new Set( [ LinearSRGBColorSpace, LinearDisplayP3ColorSpace ] );\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\t_workingColorSpace: LinearSRGBColorSpace,\n\n\tget workingColorSpace() {\n\n\t\treturn this._workingColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tif ( ! SUPPORTED_WORKING_COLOR_SPACES.has( colorSpace ) ) {\n\n\t\t\tthrow new Error( `Unsupported working color space, \"${ colorSpace }\".` );\n\n\t\t}\n\n\t\tthis._workingColorSpace = colorSpace;\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToReference = COLOR_SPACES[ sourceColorSpace ].toReference;\n\t\tconst targetFromReference = COLOR_SPACES[ targetColorSpace ].fromReference;\n\n\t\treturn targetFromReference( sourceToReference( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this._workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this._workingColorSpace );\n\n\t},\n\n\tgetPrimaries: function ( colorSpace ) {\n\n\t\treturn COLOR_SPACES[ colorSpace ].primaries;\n\n\t},\n\n\tgetTransfer: function ( colorSpace ) {\n\n\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\treturn COLOR_SPACES[ colorSpace ].transfer;\n\n\t},\n\n\tgetLuminanceCoefficients: function ( target, colorSpace = this._workingColorSpace ) {\n\n\t\treturn target.fromArray( COLOR_SPACES[ colorSpace ].luminanceCoefficients );\n\n\t},\n\n};\n\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\t\tthis.dataReady = true;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tthis.colorSpace = colorSpace;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.pmremVersion = 0; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tset needsPMREMUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.pmremVersion ++;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\t\tthis.w = e[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tresolveDepthBuffer: true,\n\t\t\tresolveStencilBuffer: true,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0,\n\t\t\tcount: 1\n\t\t}, options );\n\n\t\tconst texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\ttexture.flipY = false;\n\t\ttexture.generateMipmaps = options.generateMipmaps;\n\t\ttexture.internalFormat = options.internalFormat;\n\n\t\tthis.textures = [];\n\n\t\tconst count = options.count;\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.textures[ i ] = texture.clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = options.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = options.resolveStencilBuffer;\n\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures[ 0 ];\n\n\t}\n\n\tset texture( value ) {\n\n\t\tthis.textures[ 0 ] = value;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.textures.length; i < il; i ++ ) {\n\n\t\t\t\tthis.textures[ i ].image.width = width;\n\t\t\t\tthis.textures[ i ].image.height = height;\n\t\t\t\tthis.textures[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.textures.length = 0;\n\n\t\tfor ( let i = 0, il = source.textures.length; i < il; i ++ ) {\n\n\t\t\tthis.textures[ i ] = source.textures[ i ].clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = source.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = source.resolveStencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// sets this quaternion to a uniform random unit quaternnion\n\n\t\t// Ken Shoemake\n\t\t// Uniform random rotations\n\t\t// D. Kirk, editor, Graphics Gems III, pages 124-132. Academic Press, New York, 1992.\n\n\t\tconst theta1 = 2 * Math.PI * Math.random();\n\t\tconst theta2 = 2 * Math.PI * Math.random();\n\n\t\tconst x0 = Math.random();\n\t\tconst r1 = Math.sqrt( 1 - x0 );\n\t\tconst r2 = Math.sqrt( x0 );\n\n\t\treturn this.set(\n\t\t\tr1 * Math.sin( theta1 ),\n\t\t\tr1 * Math.cos( theta1 ),\n\t\t\tr2 * Math.sin( theta2 ),\n\t\t\tr2 * Math.cos( theta2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst theta = Math.random() * Math.PI * 2;\n\t\tconst u = Math.random() * 2 - 1;\n\t\tconst c = Math.sqrt( 1 - u * u );\n\n\t\tthis.x = c * Math.cos( theta );\n\t\tthis.y = u;\n\t\tthis.z = c * Math.sin( theta );\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x >= this.min.x && point.x <= this.max.x &&\n\t\t\tpoint.y >= this.min.y && point.y <= this.max.y &&\n\t\t\tpoint.z >= this.min.z && point.z <= this.max.z;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x >= this.min.x && box.min.x <= this.max.x &&\n\t\t\tbox.max.y >= this.min.y && box.min.y <= this.max.y &&\n\t\t\tbox.max.z >= this.min.z && box.min.z <= this.max.z;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$3.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$3 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$3, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$3, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$3, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$3, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$3 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.isSphere = true;\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$4.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$4.elements[ 0 ] *= invSX;\n\t\t_m1$4.elements[ 1 ] *= invSX;\n\t\t_m1$4.elements[ 2 ] *= invSX;\n\n\t\t_m1$4.elements[ 4 ] *= invSY;\n\t\t_m1$4.elements[ 5 ] *= invSY;\n\t\t_m1$4.elements[ 6 ] *= invSY;\n\n\t\t_m1$4.elements[ 8 ] *= invSZ;\n\t\t_m1$4.elements[ 9 ] *= invSZ;\n\t\t_m1$4.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$4 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$4 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$2 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$2.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$2, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$3 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nconst _childaddedEvent = { type: 'childadded', child: null };\nconst _childremovedEvent = { type: 'childremoved', child: null };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$3.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$3.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$3.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$3 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$3.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$3 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tobject.removeFromParent();\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t\t_childaddedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t\t_childaddedEvent.child = null;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t\t_childremovedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childremovedEvent );\n\t\t\t_childremovedEvent.child = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$3.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$3.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$3 );\n\n\t\tobject.removeFromParent();\n\t\tobject.parent = this;\n\t\tthis.children.push( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t_childaddedEvent.child = object;\n\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t_childaddedEvent.child = null;\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// make sure descendants are updated if required\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tchild.updateMatrixWorld( force );\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldAutoUpdate === true ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// make sure descendants are updated\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxInstanceCount = this._maxInstanceCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this._colorsTexture !== null ) object.colorsTexture = this._colorsTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$2 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nconst _v40 = /*@__PURE__*/ new Vector4();\nconst _v41 = /*@__PURE__*/ new Vector4();\nconst _v42 = /*@__PURE__*/ new Vector4();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$2.subVectors( a, b );\n\t\ttarget.cross( _v0$2 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$2.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$2.dot( _v0$2 );\n\t\tconst dot01 = _v0$2.dot( _v1$3 );\n\t\tconst dot02 = _v0$2.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\ttarget.set( 0, 0, 0 );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\t// if the triangle is degenerate then we can't contain a point\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$2 ) === null ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn ( _v3$2.x >= 0 ) && ( _v3$2.y >= 0 ) && ( ( _v3$2.x + _v3$2.y ) <= 1 );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$2 ) === null ) {\n\n\t\t\ttarget.x = 0;\n\t\t\ttarget.y = 0;\n\t\t\tif ( 'z' in target ) target.z = 0;\n\t\t\tif ( 'w' in target ) target.w = 0;\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$2.x );\n\t\ttarget.addScaledVector( v2, _v3$2.y );\n\t\ttarget.addScaledVector( v3, _v3$2.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic getInterpolatedAttribute( attr, i1, i2, i3, barycoord, target ) {\n\n\t\t_v40.setScalar( 0 );\n\t\t_v41.setScalar( 0 );\n\t\t_v42.setScalar( 0 );\n\n\t\t_v40.fromBufferAttribute( attr, i1 );\n\t\t_v41.fromBufferAttribute( attr, i2 );\n\t\t_v42.fromBufferAttribute( attr, i3 );\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( _v40, barycoord.x );\n\t\ttarget.addScaledVector( _v41, barycoord.y );\n\t\ttarget.addScaledVector( _v42, barycoord.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$2.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$2.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$2.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$2.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\t// onBeforeRender and onBeforeCompile only supported in WebGLRenderer\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== undefined && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.dispersion !== undefined ) data.dispersion = this.dispersion;\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapRotation !== undefined ) data.envMapRotation = this.envMapRotation.toArray();\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {\n\n\t\tconsole.warn( 'Material: onBuild() has been removed.' ); // @deprecated, r166\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$2 = 0;\n\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1$2.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1$2.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1$2.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1$2.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1$2.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1$2.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst positionAttribute = attributes.position;\n\t\tconst normalAttribute = attributes.normal;\n\t\tconst uvAttribute = attributes.uv;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * positionAttribute.count ), 4 ) );\n\n\t\t}\n\n\t\tconst tangentAttribute = this.getAttribute( 'tangent' );\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( positionAttribute, a );\n\t\t\tvB.fromBufferAttribute( positionAttribute, b );\n\t\t\tvC.fromBufferAttribute( positionAttribute, c );\n\n\t\t\tuvA.fromBufferAttribute( uvAttribute, a );\n\t\t\tuvB.fromBufferAttribute( uvAttribute, b );\n\t\t\tuvC.fromBufferAttribute( uvAttribute, c );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: index.count\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindex.getX( j + 0 ),\n\t\t\t\t\tindex.getX( j + 1 ),\n\t\t\t\t\tindex.getX( j + 2 )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromBufferAttribute( normalAttribute, v );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangentAttribute.setXYZW( v, tmp.x, tmp.y, tmp.z, w );\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( index.getX( j + 0 ) );\n\t\t\t\thandleVertex( index.getX( j + 1 ) );\n\t\t\t\thandleVertex( index.getX( j + 2 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection$1( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection$1( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tconst barycoord = new Vector3();\n\t\tTriangle.getBarycoord( _intersectionPoint, _vA$1, _vB$1, _vC$1, barycoord );\n\n\t\tif ( uv ) {\n\n\t\t\tintersection.uv = Triangle.getInterpolatedAttribute( uv, a, b, c, barycoord, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\tintersection.uv1 = Triangle.getInterpolatedAttribute( uv1, a, b, c, barycoord, new Vector2() );\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\tintersection.normal = Triangle.getInterpolatedAttribute( normal, a, b, c, barycoord, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\t\tintersection.barycoord = barycoord;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\tif ( currentRenderTarget === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\t// https://github.com/mrdoob/three.js/issues/27868\n\tif ( currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\treturn currentRenderTarget.texture.colorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tclipCullDistance: false, // set to use vertex shader clipping\n\t\t\tmultiDraw: false // set to use vertex shader multi_draw / enable gl_DrawID\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _v3$1 = /*@__PURE__*/ new Vector3();\nconst _minTarget = /*@__PURE__*/ new Vector2();\nconst _maxTarget = /*@__PURE__*/ new Vector2();\n\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Computes the 2D bounds of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Sets minTarget and maxTarget to the coordinates of the lower-left and upper-right corners of the view rectangle.\n\t */\n\tgetViewBounds( distance, minTarget, maxTarget ) {\n\n\t\t_v3$1.set( - 1, - 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tminTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t\t_v3$1.set( 1, 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tmaxTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t}\n\n\t/**\n\t * Computes the width and height of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Copies the result into the target Vector2, where x is width and y is height.\n\t */\n\tgetViewSize( distance, target ) {\n\n\t\tthis.getViewBounds( distance, _minTarget, _maxTarget );\n\n\t\treturn target.subVectors( _maxTarget, _minTarget );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$5.center.set( 0, 0, 0 );\n\t\t_sphere$5.radius = 0.7071067811865476;\n\t\t_sphere$5.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl ) {\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\t\tconst size = array.byteLength;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version,\n\t\t\tsize: size\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRanges = attribute.updateRanges;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRanges.length === 0 ) {\n\n\t\t\t// Not using update ranges\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\t// Before applying update ranges, we merge any adjacent / overlapping\n\t\t\t// ranges to reduce load on `gl.bufferSubData`. Empirically, this has led\n\t\t\t// to performance improvements for applications which make heavy use of\n\t\t\t// update ranges. Likely due to GPU command overhead.\n\t\t\t//\n\t\t\t// Note that to reduce garbage collection between frames, we merge the\n\t\t\t// update ranges in-place. This is safe because this method will clear the\n\t\t\t// update ranges once updated.\n\n\t\t\tupdateRanges.sort( ( a, b ) => a.start - b.start );\n\n\t\t\t// To merge the update ranges in-place, we work from left to right in the\n\t\t\t// existing updateRanges array, merging ranges. This may result in a final\n\t\t\t// array which is smaller than the original. This index tracks the last\n\t\t\t// index representing a merged range, any data after this index can be\n\t\t\t// trimmed once the merge algorithm is completed.\n\t\t\tlet mergeIndex = 0;\n\n\t\t\tfor ( let i = 1; i < updateRanges.length; i ++ ) {\n\n\t\t\t\tconst previousRange = updateRanges[ mergeIndex ];\n\t\t\t\tconst range = updateRanges[ i ];\n\n\t\t\t\t// We add one here to merge adjacent ranges. This is safe because ranges\n\t\t\t\t// operate over positive integers.\n\t\t\t\tif ( range.start <= previousRange.start + previousRange.count + 1 ) {\n\n\t\t\t\t\tpreviousRange.count = Math.max(\n\t\t\t\t\t\tpreviousRange.count,\n\t\t\t\t\t\trange.start + range.count - previousRange.start\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\t++ mergeIndex;\n\t\t\t\t\tupdateRanges[ mergeIndex ] = range;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Trim the array to only contain the merged ranges.\n\t\t\tupdateRanges.length = mergeIndex + 1;\n\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\n\n\t\t\t\tconst range = updateRanges[ i ];\n\n\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, range.start, range.count );\n\n\t\t\t}\n\n\t\t\tattribute.clearUpdateRanges();\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tif ( data.size !== attribute.array.byteLength ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: The size of the buffer attribute\\'s array buffer does not match the original size. Resizing buffer attributes is not supported.' );\n\n\t\t\t}\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\\n\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n\\t#endif\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_CLEARCOAT ) \\n\\t\\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_SHEEN ) \\n\\t\\tsheenSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar batching_pars_vertex = \"#ifdef USE_BATCHING\\n\\t#if ! defined( GL_ANGLE_multi_draw )\\n\\t#define gl_DrawID _gl_DrawID\\n\\tuniform int _gl_DrawID;\\n\\t#endif\\n\\tuniform highp sampler2D batchingTexture;\\n\\tuniform highp usampler2D batchingIdTexture;\\n\\tmat4 getBatchingMatrix( const in float i ) {\\n\\t\\tint size = textureSize( batchingTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n\\tfloat getIndirectIndex( const in int i ) {\\n\\t\\tint size = textureSize( batchingIdTexture, 0 ).x;\\n\\t\\tint x = i % size;\\n\\t\\tint y = i / size;\\n\\t\\treturn float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\\n\\t}\\n#endif\\n#ifdef USE_BATCHING_COLOR\\n\\tuniform sampler2D batchingColorTexture;\\n\\tvec3 getBatchingColor( const in float i ) {\\n\\t\\tint size = textureSize( batchingColorTexture, 0 ).x;\\n\\t\\tint j = int( i );\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\\n\\t}\\n#endif\";\n\nvar batching_vertex = \"#ifdef USE_BATCHING\\n\\tmat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\\t\\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\t\\tfloat distanceToPlane, distanceGradient;\\n\\t\\tfloat clipOpacity = 1.0;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\tif ( clipOpacity == 0.0 ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tfloat unionClipOpacity = 1.0;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\t\\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tclipOpacity *= 1.0 - unionClipOpacity;\\n\\t\\t#endif\\n\\t\\tdiffuseColor.a *= clipOpacity;\\n\\t\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tbool clipped = true;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tif ( clipped ) discard;\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\\n#ifdef USE_BATCHING_COLOR\\n\\tvec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\\n\\tvColor.xyz *= batchingColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = objectTangent;\\n#endif\\n#ifdef USE_BATCHING\\n\\tmat3 bm = mat3( batchingMatrix );\\n\\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\\n\\ttransformedNormal = bm * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = bm * transformedTangent;\\n\\t#endif\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmat3 im = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\\n\\ttransformedNormal = im * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = im * transformedTangent;\\n\\t#endif\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"\\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\\n\\tvec3( 0.8224621, 0.177538, 0.0 ),\\n\\tvec3( 0.0331941, 0.9668058, 0.0 ),\\n\\tvec3( 0.0170827, 0.0723974, 0.9105199 )\\n);\\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.2249401, - 0.2249404, 0.0 ),\\n\\tvec3( - 0.0420569, 1.0420571, 0.0 ),\\n\\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\\n);\\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\\n}\\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\\n}\\nvec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform mat3 envMapRotation;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_DISPERSION\\n\\tmaterial.dispersion = dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tif( material.anisotropy == 0.0 ) {\\n\\t\\tanisotropyV = vec2( 1.0, 0.0 );\\n\\t} else {\\n\\t\\tanisotropyV /= material.anisotropy;\\n\\t\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\t}\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\tfloat dispersion;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvFragDepth = 1.0 + gl_Position.w;\\n\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphinstance_vertex = \"#ifdef USE_INSTANCING_MORPH\\n\\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\\n\\t}\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t}\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_INSTANCING_MORPH\\n\\t\\tuniform float morphTargetBaseInfluence;\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t#endif\\n\\tuniform sampler2DArray morphTargetsTexture;\\n\\tuniform ivec2 morphTargetsTextureSize;\\n\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t}\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t}\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;\\nconst float Inv255 = 1. / 255.;\\nconst vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\\nconst vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );\\nconst vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\\nconst vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tif( v <= 0.0 )\\n\\t\\treturn vec4( 0., 0., 0., 0. );\\n\\tif( v >= 1.0 )\\n\\t\\treturn vec4( 1., 1., 1., 1. );\\n\\tfloat vuf;\\n\\tfloat af = modf( v * PackFactors.a, vuf );\\n\\tfloat bf = modf( vuf * ShiftRight8, vuf );\\n\\tfloat gf = modf( vuf * ShiftRight8, vuf );\\n\\treturn vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\\n}\\nvec3 packDepthToRGB( const in float v ) {\\n\\tif( v <= 0.0 )\\n\\t\\treturn vec3( 0., 0., 0. );\\n\\tif( v >= 1.0 )\\n\\t\\treturn vec3( 1., 1., 1. );\\n\\tfloat vuf;\\n\\tfloat bf = modf( v * PackFactors.b, vuf );\\n\\tfloat gf = modf( vuf * ShiftRight8, vuf );\\n\\treturn vec3( vuf * Inv255, gf * PackUpscale, bf );\\n}\\nvec2 packDepthToRG( const in float v ) {\\n\\tif( v <= 0.0 )\\n\\t\\treturn vec2( 0., 0. );\\n\\tif( v >= 1.0 )\\n\\t\\treturn vec2( 1., 1. );\\n\\tfloat vuf;\\n\\tfloat gf = modf( v * 256., vuf );\\n\\treturn vec2( vuf * Inv255, gf );\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors4 );\\n}\\nfloat unpackRGBToDepth( const in vec3 v ) {\\n\\treturn dot( v, UnpackFactors3 );\\n}\\nfloat unpackRGToDepth( const in vec2 v ) {\\n\\treturn v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\\n}\\nvec4 pack2HalfToRGBA( const in vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( const in vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_BATCHING\\n\\tmvPosition = batchingMatrix * mvPosition;\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn mix( 1.0, shadow, shadowIntensity );\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\t\\n\\t\\tfloat lightToPositionLength = length( lightToPosition );\\n\\t\\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\\n\\t\\t\\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\t\\tdp += shadowBias;\\n\\t\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\t\\tshadow = (\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn mix( 1.0, shadow, shadowIntensity );\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tint size = textureSize( boneTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 CineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.6605, - 0.1246, - 0.0182 ),\\n\\tvec3( - 0.5876, 1.1329, - 0.1006 ),\\n\\tvec3( - 0.0728, - 0.0083, 1.1187 )\\n);\\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\\n\\tvec3( 0.6274, 0.0691, 0.0164 ),\\n\\tvec3( 0.3293, 0.9195, 0.0880 ),\\n\\tvec3( 0.0433, 0.0113, 0.8956 )\\n);\\nvec3 agxDefaultContrastApprox( vec3 x ) {\\n\\tvec3 x2 = x * x;\\n\\tvec3 x4 = x2 * x2;\\n\\treturn + 15.5 * x4 * x2\\n\\t\\t- 40.14 * x4 * x\\n\\t\\t+ 31.96 * x4\\n\\t\\t- 6.868 * x2 * x\\n\\t\\t+ 0.4298 * x2\\n\\t\\t+ 0.1191 * x\\n\\t\\t- 0.00232;\\n}\\nvec3 AgXToneMapping( vec3 color ) {\\n\\tconst mat3 AgXInsetMatrix = mat3(\\n\\t\\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\\n\\t\\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\\n\\t\\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\\n\\t);\\n\\tconst mat3 AgXOutsetMatrix = mat3(\\n\\t\\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\\n\\t\\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\\n\\t\\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\\n\\t);\\n\\tconst float AgxMinEv = - 12.47393;\\tconst float AgxMaxEv = 4.026069;\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\\n\\tcolor = AgXInsetMatrix * color;\\n\\tcolor = max( color, 1e-10 );\\tcolor = log2( color );\\n\\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\tcolor = agxDefaultContrastApprox( color );\\n\\tcolor = AgXOutsetMatrix * color;\\n\\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\\n\\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\treturn color;\\n}\\nvec3 NeutralToneMapping( vec3 color ) {\\n\\tconst float StartCompression = 0.8 - 0.04;\\n\\tconst float Desaturation = 0.15;\\n\\tcolor *= toneMappingExposure;\\n\\tfloat x = min( color.r, min( color.g, color.b ) );\\n\\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\\n\\tcolor -= offset;\\n\\tfloat peak = max( color.r, max( color.g, color.b ) );\\n\\tif ( peak < StartCompression ) return color;\\n\\tfloat d = 1. - StartCompression;\\n\\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\\n\\tcolor *= newPeak / peak;\\n\\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\\n\\treturn mix( color, vec3( newPeak ), g );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec4 transmittedLight;\\n\\t\\tvec3 transmittance;\\n\\t\\t#ifdef USE_DISPERSION\\n\\t\\t\\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\\n\\t\\t\\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\\n\\t\\t\\tfor ( int i = 0; i < 3; i ++ ) {\\n\\t\\t\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\\n\\t\\t\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\t\\n\\t\\t\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\t\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\t\\t\\trefractionCoords += 1.0;\\n\\t\\t\\t\\trefractionCoords /= 2.0;\\n\\t\\t\\n\\t\\t\\t\\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\\n\\t\\t\\t\\ttransmittedLight[ i ] = transmissionSample[ i ];\\n\\t\\t\\t\\ttransmittedLight.a += transmissionSample.a;\\n\\t\\t\\t\\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\\n\\t\\t\\t}\\n\\t\\t\\ttransmittedLight.a /= 3.0;\\n\\t\\t\\n\\t\\t#else\\n\\t\\t\\n\\t\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\t\\trefractionCoords += 1.0;\\n\\t\\t\\trefractionCoords /= 2.0;\\n\\t\\t\\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\t\\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\t\\n\\t\\t#endif\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_BATCHING\\n\\t\\tworldPosition = batchingMatrix * worldPosition;\\n\\t#endif\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nuniform mat3 backgroundRotation;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#elif DEPTH_PACKING == 3202\\n\\t\\tgl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\\n\\t#elif DEPTH_PACKING == 3203\\n\\t\\tgl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_DISPERSION\\n\\tuniform float dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix[ 3 ];\\n\\tvec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbatching_pars_vertex: batching_pars_vertex,\n\tbatching_vertex: batching_vertex,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphinstance_vertex: morphinstance_vertex,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tenvMapRotation: { value: /*@__PURE__*/ new Matrix3() },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowIntensity: 1,\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowIntensity: 1,\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowIntensity: 1,\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 },\n\t\t\tbackgroundRotation: { value: /*@__PURE__*/ new Matrix3() }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tdispersion: { value: 0 },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\nconst _e1$1 = /*@__PURE__*/ new Euler();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction getBackground( scene ) {\n\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\treturn background;\n\n\t}\n\n\tfunction render( scene ) {\n\n\t\tlet forceClear = false;\n\t\tconst background = getBackground( scene );\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\t// buffers might not be writable which is required to ensure a correct clear\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t}\n\n\tfunction addToRenderList( renderList, scene ) {\n\n\t\tconst background = getBackground( scene );\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\t_e1$1.copy( scene.backgroundRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1$1.x *= - 1; _e1$1.y *= - 1; _e1$1.z *= - 1;\n\n\t\t\tif ( background.isCubeTexture && background.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1$1.y *= - 1;\n\t\t\t\t_e1$1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.uniforms.backgroundRotation.value.setFromMatrix4( _m1$1.makeRotationFromEuler( _e1$1 ) );\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render,\n\t\taddToRenderList: addToRenderList\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, attributes ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tconst state = getBindingState( geometry, program, material );\n\n\t\tif ( currentState !== state ) {\n\n\t\t\tcurrentState = state;\n\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t}\n\n\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\treturn gl.createVertexArray();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\treturn gl.bindVertexArray( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\treturn gl.deleteVertexArray( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tgl.vertexAttribDivisor( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes\n\n\t\t\t\t\tconst integer = ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawArraysInstanced( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\textension.multiDrawArraysWEBGL( mode, starts, 0, counts, 0, drawCount );\n\n\t\tlet elementCount = 0;\n\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\telementCount += counts[ i ];\n\n\t\t}\n\n\t\tinfo.update( elementCount, mode, 1 );\n\n\t}\n\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\n\n\t\t\t\trenderInstances( starts[ i ], counts[ i ], primcount[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysInstancedWEBGL( mode, starts, 0, counts, 0, primcount, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < primcount.length; i ++ ) {\n\n\t\t\t\tinfo.update( elementCount, mode, primcount[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters, utils ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction textureFormatReadable( textureFormat ) {\n\n\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction textureTypeReadable( textureType ) {\n\n\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) );\n\n\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\ttextureType !== FloatType && ! halfFloatSupportedByExt ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\tconst reverseDepthBuffer = parameters.reverseDepthBuffer === true && extensions.has( 'EXT_clip_control' );\n\n\tif ( reverseDepthBuffer === true ) {\n\n\t\tconst ext = extensions.get( 'EXT_clip_control' );\n\t\text.clipControlEXT( ext.LOWER_LEFT_EXT, ext.ZERO_TO_ONE_EXT );\n\n\t}\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\n\tconst maxSamples = gl.getParameter( gl.MAX_SAMPLES );\n\n\treturn {\n\n\t\tisWebGL2: true, // keeping this for backwards compatibility\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\ttextureFormatReadable: textureFormatReadable,\n\t\ttextureTypeReadable: textureTypeReadable,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\treverseDepthBuffer: reverseDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\nlet _oldActiveCubeFace = 0;\nlet _oldActiveMipmapLevel = 0;\nlet _oldXrEnabled = false;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\n\n\t\tthis._renderer.xr.enabled = false;\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported equirectangular image size is 64 x 32.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported cube size is 16 x 16.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\n\t\tthis._renderer.xr.enabled = _oldXrEnabled;\n\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\n\n\t\tthis._renderer.xr.enabled = false;\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\t\tconst n = this._lodPlanes.length;\n\n\t\tfor ( let i = 1; i < n; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( n - i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\tconst currentPMREMVersion = renderTarget !== undefined ? renderTarget.texture.pmremVersion : 0;\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.pmremVersion !== currentPMREMVersion ) {\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\n\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( renderTarget !== undefined ) {\n\n\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\n\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function () {\n\n\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\t\t\tgetExtension( 'WEBGL_clip_cull_distance' );\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\t\t\tgetExtension( 'WEBGL_render_shared_exponent' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\twarnOnce( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawElementsInstanced( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\n\n\t\tlet elementCount = 0;\n\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\telementCount += counts[ i ];\n\n\t\t}\n\n\t\tinfo.update( elementCount, mode, 1 );\n\n\n\t}\n\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\n\n\t\t\t\trenderInstances( starts[ i ] / bytesPerElement, counts[ i ], primcount[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsInstancedWEBGL( mode, counts, 0, type, starts, 0, primcount, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < primcount.length; i ++ ) {\n\n\t\t\t\tinfo.update( elementCount, mode, primcount[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t// the following encodes morph targets into an array of data textures. Each layer represents a single morph target.\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet entry = morphTextures.get( geometry );\n\n\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\tlet vertexDataCount = 0;\n\n\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\tlet height = 1;\n\n\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t}\n\n\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\ttexture.type = FloatType;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\t// fill buffer\n\n\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tentry = {\n\t\t\t\tcount: morphTargetsCount,\n\t\t\t\ttexture: texture,\n\t\t\t\tsize: new Vector2( width, height )\n\t\t\t};\n\n\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\tfunction disposeTexture() {\n\n\t\t\t\ttexture.dispose();\n\n\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t}\n\n\t\t//\n\t\tif ( object.isInstancedMesh === true && object.morphTexture !== null ) {\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTexture', object.morphTexture, textures );\n\n\t\t} else {\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format = DepthFormat ) {\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\n\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\n\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\tlet emptyTexture2D;\n\n\tif ( this.type === gl.SAMPLER_2D_SHADOW ) {\n\n\t\temptyShadowTexture.compareFunction = LessEqualCompare; // #28670\n\t\temptyTexture2D = emptyShadowTexture;\n\n\t} else {\n\n\t\temptyTexture2D = emptyTexture;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\nconst COMPLETION_STATUS_KHR = 0x91B1;\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\tconst encodingPrimaries = ColorManagement.getPrimaries( colorSpace );\n\n\tlet gamutMapping;\n\n\tif ( workingPrimaries === encodingPrimaries ) {\n\n\t\tgamutMapping = '';\n\n\t} else if ( workingPrimaries === P3Primaries && encodingPrimaries === Rec709Primaries ) {\n\n\t\tgamutMapping = 'LinearDisplayP3ToLinearSRGB';\n\n\t} else if ( workingPrimaries === Rec709Primaries && encodingPrimaries === P3Primaries ) {\n\n\t\tgamutMapping = 'LinearSRGBToLinearDisplayP3';\n\n\t}\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\tcase LinearDisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t\tcase SRGBColorSpace:\n\t\tcase DisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn `vec4 ${functionName}( vec4 value ) { return ${components[ 0 ]}( ${components[ 1 ]}( value ) ); }`;\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'Cineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase AgXToneMapping:\n\t\t\ttoneMappingName = 'AgX';\n\t\t\tbreak;\n\n\t\tcase NeutralToneMapping:\n\t\t\ttoneMappingName = 'Neutral';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\n\nfunction getLuminanceFunction() {\n\n\tColorManagement.getLuminanceCoefficients( _v0$1 );\n\n\tconst r = _v0$1.x.toFixed( 4 );\n\tconst g = _v0$1.y.toFixed( 4 );\n\tconst b = _v0$1.z.toFixed( 4 );\n\n\treturn [\n\n\t\t'float luminance( const in vec3 rgb ) {',\n\n\t\t`\tconst vec3 weights = vec3( ${ r }, ${ g }, ${ b } );`,\n\n\t\t'\treturn dot( weights, rgb );',\n\n\t\t'}'\n\n\t].join( '\\n' );\n\n}\n\nfunction generateVertexExtensions( parameters ) {\n\n\tconst chunks = [\n\t\tparameters.extensionClipCullDistance ? '#extension GL_ANGLE_clip_cull_distance : require' : '',\n\t\tparameters.extensionMultiDraw ? '#extension GL_ANGLE_multi_draw : require' : '',\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map();\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = `precision ${parameters.precision} float;\n\tprecision ${parameters.precision} int;\n\tprecision ${parameters.precision} sampler2D;\n\tprecision ${parameters.precision} samplerCube;\n\tprecision ${parameters.precision} sampler3D;\n\tprecision ${parameters.precision} sampler2DArray;\n\tprecision ${parameters.precision} sampler2DShadow;\n\tprecision ${parameters.precision} samplerCubeShadow;\n\tprecision ${parameters.precision} sampler2DArrayShadow;\n\tprecision ${parameters.precision} isampler2D;\n\tprecision ${parameters.precision} isampler3D;\n\tprecision ${parameters.precision} isamplerCube;\n\tprecision ${parameters.precision} isampler2DArray;\n\tprecision ${parameters.precision} usampler2D;\n\tprecision ${parameters.precision} usampler3D;\n\tprecision ${parameters.precision} usamplerCube;\n\tprecision ${parameters.precision} usampler2DArray;\n\t`;\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customVertexExtensions = generateVertexExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.extensionClipCullDistance ? '#define USE_CLIP_DISTANCE' : '',\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\n\t\t\tparameters.batchingColor ? '#define USE_BATCHING_COLOR' : '',\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\t\t\tparameters.instancingMorph ? '#define USE_INSTANCING_MORPH' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.reverseDepthBuffer ? '#define USE_REVERSEDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_MORPH',\n\n\t\t\t'\tuniform sampler2D morphTexture;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.alphaToCoverage ? '#define ALPHA_TO_COVERAGE' : '',\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.dispersion ? '#define USE_DISPERSION' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor || parameters.batchingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.reverseDepthBuffer ? '#define USE_REVERSEDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\t\t\tgetLuminanceFunction(),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\tcustomVertexExtensions,\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tfunction onFirstUse( self ) {\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Material Name: ' + self.name + '\\n' +\n\t\t\t\t\t\t'Material Type: ' + self.type + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tself.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t}\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t// Populates cachedUniforms and cachedAttributes\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t// Populates cachedAttributes and cachedUniforms\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\n\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\n\n\tthis.isReady = function () {\n\n\t\tif ( programReady === false ) {\n\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\n\n\t\t}\n\n\t\treturn programReady;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id$1 = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id$1 ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst _activeChannels = new Set();\n\tconst programs = [];\n\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst reverseDepthBuffer = capabilities.reverseDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\t_activeChannels.add( value );\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_DISPERSION = material.dispersion > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tbatching: IS_BATCHEDMESH,\n\t\t\tbatchingColor: IS_BATCHEDMESH && object._colorsTexture !== null,\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\t\t\tinstancingMorph: IS_INSTANCEDMESH && object.morphTexture !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\t\t\talphaToCoverage: !! material.alphaToCoverage,\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tdispersion: HAS_DISPERSION,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending && material.alphaToCoverage === false,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( !! fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\t\treverseDepthBuffer: reverseDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionClipCullDistance: HAS_EXTENSIONS && material.extensions.clipCullDistance === true && extensions.has( 'WEBGL_clip_cull_distance' ),\n\t\t\textensionMultiDraw: ( HAS_EXTENSIONS && material.extensions.multiDraw === true || IS_BATCHEDMESH ) && extensions.has( 'WEBGL_multi_draw' ),\n\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\t// the usage of getChannel() determines the active texture channels for this shader\n\n\t\tparameters.vertexUv1s = _activeChannels.has( 1 );\n\t\tparameters.vertexUv2s = _activeChannels.has( 2 );\n\t\tparameters.vertexUv3s = _activeChannels.has( 3 );\n\n\t\t_activeChannels.clear();\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingMorph )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.alphaHash )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.batching )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.dispersion )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.batchingColor )\n\t\t\t_programLayers.enable( 21 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.reverseDepthBuffer )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.alphaToCoverage )\n\t\t\t_programLayers.enable( 20 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction has( object ) {\n\n\t\treturn properties.has( object );\n\n\t}\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\thas: has,\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions ) {\n\n\tconst lights = new WebGLLights( extensions );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init( camera ) {\n\n\t\tstate.camera = camera;\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights() {\n\n\t\tlights.setup( lightsArray );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tcamera: null,\n\n\t\tlights: lights,\n\n\t\ttransmissionRenderTarget: {}\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( renderer, objects, capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst activeCubeFace = renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst _state = renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( shadow.map );\n\t\t\trenderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\trenderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\trenderer.setRenderTarget( shadow.mapPass );\n\t\trenderer.clear();\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\trenderer.setRenderTarget( shadow.map );\n\t\trenderer.clear();\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\t\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t// make sure to remove the unique distance/depth materials used for shadow map rendering\n\n\t\tfor ( const id in _materialCache ) {\n\n\t\t\tconst cache = _materialCache[ id ];\n\n\t\t\tconst uuid = event.target.uuid;\n\n\t\t\tif ( uuid in cache ) {\n\n\t\t\t\tconst shadowMaterial = cache[ uuid ];\n\t\t\t\tshadowMaterial.dispose();\n\t\t\t\tdelete cache[ uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst reversedFuncs = {\n\t[ NeverDepth ]: AlwaysDepth,\n\t[ LessDepth ]: GreaterDepth,\n\t[ EqualDepth ]: NotEqualDepth,\n\t[ LessEqualDepth ]: GreaterEqualDepth,\n\n\t[ AlwaysDepth ]: NeverDepth,\n\t[ GreaterDepth ]: LessDepth,\n\t[ NotEqualDepth ]: EqualDepth,\n\t[ GreaterEqualDepth ]: LessEqualDepth,\n};\n\nfunction WebGLState( gl ) {\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\t\tlet reversed = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetReversed: function ( value ) {\n\n\t\t\t\treversed = value;\n\n\t\t\t},\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( reversed ) depthFunc = reversedFuncs[ depthFunc ];\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentBlendColor = new Color( 0, 0, 0 );\n\tlet currentBlendAlpha = 0;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t}\n\n\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t}\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tequationToGL[ MinEquation ] = gl.MIN;\n\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\n\t\t\t\tcurrentBlendAlpha = 0;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\n\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\n\n\t\t\tcurrentBlendColor.copy( blendColor );\n\t\t\tcurrentBlendAlpha = blendAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\t\tgl.blendColor( 0, 0, 0, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\n\t\tcurrentBlendAlpha = 0;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction contain( texture, aspect ) {\n\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\n\n\tif ( imageAspect > aspect ) {\n\n\t\ttexture.repeat.x = 1;\n\t\ttexture.repeat.y = imageAspect / aspect;\n\n\t\ttexture.offset.x = 0;\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\n\n\t} else {\n\n\t\ttexture.repeat.x = aspect / imageAspect;\n\t\ttexture.repeat.y = 1;\n\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\n\t\ttexture.offset.y = 0;\n\n\t}\n\n\treturn texture;\n\n}\n\nfunction cover( texture, aspect ) {\n\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\n\n\tif ( imageAspect > aspect ) {\n\n\t\ttexture.repeat.x = aspect / imageAspect;\n\t\ttexture.repeat.y = 1;\n\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\n\t\ttexture.offset.y = 0;\n\n\t} else {\n\n\t\ttexture.repeat.x = 1;\n\t\ttexture.repeat.y = imageAspect / aspect;\n\n\t\ttexture.offset.x = 0;\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\n\n\t}\n\n\treturn texture;\n\n}\n\nfunction fill( texture ) {\n\n\ttexture.repeat.x = 1;\n\ttexture.repeat.y = 1;\n\n\ttexture.offset.x = 0;\n\ttexture.offset.y = 0;\n\n\treturn texture;\n\n}\n\n\n\n/**\n * Given the width, height, format, and type of a texture. Determines how many\n * bytes must be used to represent the texture.\n */\nfunction getByteLength( width, height, format, type ) {\n\n\tconst typeByteLength = getTextureTypeByteLength( type );\n\n\tswitch ( format ) {\n\n\t\t// https://registry.khronos.org/OpenGL-Refpages/es3.0/html/glTexImage2D.xhtml\n\t\tcase AlphaFormat:\n\t\t\treturn width * height;\n\t\tcase LuminanceFormat:\n\t\t\treturn width * height;\n\t\tcase LuminanceAlphaFormat:\n\t\t\treturn width * height * 2;\n\t\tcase RedFormat:\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RedIntegerFormat:\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGFormat:\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGIntegerFormat:\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBFormat:\n\t\t\treturn ( ( width * height * 3 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBAFormat:\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBAIntegerFormat:\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_s3tc_srgb/\n\t\tcase RGB_S3TC_DXT1_Format:\n\t\tcase RGBA_S3TC_DXT1_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\n\t\tcase RGBA_S3TC_DXT3_Format:\n\t\tcase RGBA_S3TC_DXT5_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_pvrtc/\n\t\tcase RGB_PVRTC_2BPPV1_Format:\n\t\tcase RGBA_PVRTC_2BPPV1_Format:\n\t\t\treturn ( Math.max( width, 16 ) * Math.max( height, 8 ) ) / 4;\n\t\tcase RGB_PVRTC_4BPPV1_Format:\n\t\tcase RGBA_PVRTC_4BPPV1_Format:\n\t\t\treturn ( Math.max( width, 8 ) * Math.max( height, 8 ) ) / 2;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_etc/\n\t\tcase RGB_ETC1_Format:\n\t\tcase RGB_ETC2_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\n\t\tcase RGBA_ETC2_EAC_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\n\t\tcase RGBA_ASTC_4x4_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\t\tcase RGBA_ASTC_5x4_Format:\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\t\tcase RGBA_ASTC_5x5_Format:\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_6x5_Format:\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_6x6_Format:\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_8x5_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_8x6_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_8x8_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\n\t\tcase RGBA_ASTC_10x5_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_10x6_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_10x8_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\n\t\tcase RGBA_ASTC_10x10_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\n\t\tcase RGBA_ASTC_12x10_Format:\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\n\t\tcase RGBA_ASTC_12x12_Format:\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 11 ) / 12 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_bptc/\n\t\tcase RGBA_BPTC_Format:\n\t\tcase RGB_BPTC_SIGNED_Format:\n\t\tcase RGB_BPTC_UNSIGNED_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_rgtc/\n\t\tcase RED_RGTC1_Format:\n\t\tcase SIGNED_RED_RGTC1_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 8;\n\t\tcase RED_GREEN_RGTC2_Format:\n\t\tcase SIGNED_RED_GREEN_RGTC2_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\n\n\t}\n\n\tthrow new Error(\n\t\t`Unable to determine texture byte length for ${format} format.`,\n\t);\n\n}\n\nfunction getTextureTypeByteLength( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase UnsignedByteType:\n\t\tcase ByteType:\n\t\t\treturn { byteLength: 1, components: 1 };\n\t\tcase UnsignedShortType:\n\t\tcase ShortType:\n\t\tcase HalfFloatType:\n\t\t\treturn { byteLength: 2, components: 1 };\n\t\tcase UnsignedShort4444Type:\n\t\tcase UnsignedShort5551Type:\n\t\t\treturn { byteLength: 2, components: 4 };\n\t\tcase UnsignedIntType:\n\t\tcase IntType:\n\t\tcase FloatType:\n\t\t\treturn { byteLength: 4, components: 1 };\n\t\tcase UnsignedInt5999Type:\n\t\t\treturn { byteLength: 4, components: 3 };\n\n\t}\n\n\tthrow new Error( `Unknown texture type ${type}.` );\n\n}\n\nconst TextureUtils = {\n\tcontain,\n\tcover,\n\tfill,\n\tgetByteLength\n};\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _imageDimensions = new Vector2();\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\tconst dimensions = getDimensions( image );\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( dimensions.width > maxSize || dimensions.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( dimensions.width, dimensions.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ||\n\t\t\t\t( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) ) {\n\n\t\t\t\tconst width = Math.floor( scale * dimensions.width );\n\t\t\t\tconst height = Math.floor( scale * dimensions.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + dimensions.width + 'x' + dimensions.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + dimensions.width + 'x' + dimensions.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture ) {\n\n\t\treturn texture.generateMipmaps && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RG16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RG32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RG8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RG16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RG32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGB_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGB8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RGB16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RGB32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RGB8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RGB16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RGB32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGBA8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RGBA16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RGBA32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RGBA8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RGBA16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RGBA32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGB ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_INT_5_9_9_9_REV ) internalFormat = _gl.RGB9_E5;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getInternalDepthFormat( useStencil, depthType ) {\n\n\t\tlet glInternalFormat;\n\t\tif ( useStencil ) {\n\n\t\t\tif ( depthType === null || depthType === UnsignedIntType || depthType === UnsignedInt248Type ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t} else if ( depthType === FloatType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH32F_STENCIL8;\n\n\t\t\t} else if ( depthType === UnsignedShortType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\t\t\t\tconsole.warn( 'DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.' );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( depthType === null || depthType === UnsignedIntType || depthType === UnsignedInt248Type ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t} else if ( depthType === FloatType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t} else if ( depthType === UnsignedShortType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn glInternalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\tinfo.memory.textures --;\n\n\t\t\t}\n\n\t\t\tproperties.remove( textures[ i ] );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture ) {\n\n\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false &&\n\t\t\t( texture.magFilter === LinearFilter || texture.magFilter === LinearMipmapNearestFilter || texture.magFilter === NearestMipmapLinearFilter || texture.magFilter === LinearMipmapLinearFilter ||\n\t\t\ttexture.minFilter === LinearFilter || texture.minFilter === LinearMipmapNearestFilter || texture.minFilter === NearestMipmapLinearFilter || texture.minFilter === LinearMipmapLinearFilter ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device.' );\n\n\t\t}\n\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t}\n\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tlet image = resizeImage( texture.image, false, capabilities.maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tconst glType = utils.convert( texture.type );\n\t\t\tlet glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tconst levels = getMipLevels( texture, image );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\tglInternalFormat = getInternalDepthFormat( texture.format === DepthStencilFormat, texture.type );\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tif ( texture.layerUpdates.size > 0 ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst layerByteLength = getByteLength( mipmap.width, mipmap.height, texture.format, texture.type );\n\n\t\t\t\t\t\t\t\t\t\t\tfor ( const layerIndex of texture.layerUpdates ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tconst layerData = mipmap.data.subarray(\n\t\t\t\t\t\t\t\t\t\t\t\t\tlayerIndex * layerByteLength / mipmap.data.BYTES_PER_ELEMENT,\n\t\t\t\t\t\t\t\t\t\t\t\t\t( layerIndex + 1 ) * layerByteLength / mipmap.data.BYTES_PER_ELEMENT\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, layerIndex, mipmap.width, mipmap.height, 1, glFormat, layerData, 0, 0 );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\ttexture.clearLayerUpdates();\n\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tif ( texture.layerUpdates.size > 0 ) {\n\n\t\t\t\t\t\t\tconst layerByteLength = getByteLength( image.width, image.height, texture.format, texture.type );\n\n\t\t\t\t\t\t\tfor ( const layerIndex of texture.layerUpdates ) {\n\n\t\t\t\t\t\t\t\tconst layerData = image.data.subarray(\n\t\t\t\t\t\t\t\t\tlayerIndex * layerByteLength / image.data.BYTES_PER_ELEMENT,\n\t\t\t\t\t\t\t\t\t( layerIndex + 1 ) * layerByteLength / image.data.BYTES_PER_ELEMENT\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, layerIndex, image.width, image.height, 1, glFormat, glType, layerData );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttexture.clearLayerUpdates();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tconst dimensions = getDimensions( mipmaps[ 0 ] );\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tconst dimensions = getDimensions( image );\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], true, capabilities.maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tlet levels = getMipLevels( texture, image );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tconst dimensions = getDimensions( cubeImage[ 0 ] );\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t// retrieve the depth attachment types\n\t\t\tconst depthTexture = renderTarget.depthTexture;\n\t\t\tconst depthType = depthTexture && depthTexture.isDepthTexture ? depthTexture.type : null;\n\t\t\tconst glInternalFormat = getInternalDepthFormat( renderTarget.stencilBuffer, depthType );\n\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\n\t\t\t// set up the attachment\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\tconst isUseMultisampledRTT = useMultisampledRTT( renderTarget );\n\t\t\tif ( isUseMultisampledRTT ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( isMultisample ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\t// if the bound depth texture has changed\n\t\tif ( renderTargetProperties.__boundDepthTexture !== renderTarget.depthTexture ) {\n\n\t\t\t// fire the dispose event to get rid of stored state associated with the previously bound depth buffer\n\t\t\tconst depthTexture = renderTarget.depthTexture;\n\t\t\tif ( renderTargetProperties.__depthDisposeCallback ) {\n\n\t\t\t\trenderTargetProperties.__depthDisposeCallback();\n\n\t\t\t}\n\n\t\t\t// set up dispose listeners to track when the currently attached buffer is implicitly unbound\n\t\t\tif ( depthTexture ) {\n\n\t\t\t\tconst disposeEvent = () => {\n\n\t\t\t\t\tdelete renderTargetProperties.__boundDepthTexture;\n\t\t\t\t\tdelete renderTargetProperties.__depthDisposeCallback;\n\t\t\t\t\tdepthTexture.removeEventListener( 'dispose', disposeEvent );\n\n\t\t\t\t};\n\n\t\t\t\tdepthTexture.addEventListener( 'dispose', disposeEvent );\n\t\t\t\trenderTargetProperties.__depthDisposeCallback = disposeEvent;\n\n\t\t\t}\n\n\t\t\trenderTargetProperties.__boundDepthTexture = depthTexture;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer[ i ] === undefined ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// attach buffer if it's been created already\n\t\t\t\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\t\t\t\tconst renderbuffer = renderTargetProperties.__webglDepthbuffer[ i ];\n\t\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer === undefined ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// attach buffer if it's been created already\n\t\t\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\t\t\tconst renderbuffer = renderTargetProperties.__webglDepthbuffer;\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\tif ( ! isMultipleRenderTargets ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture );\n\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst invalidationArrayRead = [];\n\tconst invalidationArrayDraw = [];\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.samples > 0 ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = renderTarget.textures;\n\t\t\t\tconst width = renderTarget.width;\n\t\t\t\tconst height = renderTarget.height;\n\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\t\t\t// If MRT we need to remove FBO attachments\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTarget.resolveDepthBuffer ) {\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\n\t\t\t\t\t\t// resolving stencil is slow with a D3D backend. disable it for all transmission render targets (see #27799)\n\n\t\t\t\t\t\tif ( renderTarget.stencilBuffer && renderTarget.resolveStencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\t\tif ( supportsInvalidateFramebuffer === true ) {\n\n\t\t\t\t\t\tinvalidationArrayRead.length = 0;\n\t\t\t\t\t\tinvalidationArrayDraw.length = 0;\n\n\t\t\t\t\t\tinvalidationArrayRead.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false ) {\n\n\t\t\t\t\t\t\tinvalidationArrayRead.push( depthStyle );\n\t\t\t\t\t\t\tinvalidationArrayDraw.push( depthStyle );\n\n\t\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, invalidationArrayDraw );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArrayRead );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t} else {\n\n\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false && supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( capabilities.maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\n\n\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction getDimensions( image ) {\n\n\t\tif ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) {\n\n\t\t\t// if intrinsic data are not available, fallback to width/height\n\n\t\t\t_imageDimensions.width = image.naturalWidth || image.width;\n\t\t\t_imageDimensions.height = image.naturalHeight || image.height;\n\n\t\t} else if ( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) {\n\n\t\t\t_imageDimensions.width = image.displayWidth;\n\t\t\t_imageDimensions.height = image.displayHeight;\n\n\t\t} else {\n\n\t\t\t_imageDimensions.width = image.width;\n\t\t\t_imageDimensions.height = image.height;\n\n\t\t}\n\n\t\treturn _imageDimensions;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions ) {\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedInt5999Type ) return gl.UNSIGNED_INT_5_9_9_9_REV;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\t\tif ( p === HalfFloatType ) return gl.HALF_FLOAT;\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC\n\n\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) return gl.UNSIGNED_INT_24_8;\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nconst _occlusion_vertex = `\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}`;\n\nconst _occlusion_fragment = `\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}`;\n\nclass WebXRDepthSensing {\n\n\tconstructor() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t\tthis.depthNear = 0;\n\t\tthis.depthFar = 0;\n\n\t}\n\n\tinit( renderer, depthData, renderState ) {\n\n\t\tif ( this.texture === null ) {\n\n\t\t\tconst texture = new Texture();\n\n\t\t\tconst texProps = renderer.properties.get( texture );\n\t\t\ttexProps.__webglTexture = depthData.texture;\n\n\t\t\tif ( ( depthData.depthNear != renderState.depthNear ) || ( depthData.depthFar != renderState.depthFar ) ) {\n\n\t\t\t\tthis.depthNear = depthData.depthNear;\n\t\t\t\tthis.depthFar = depthData.depthFar;\n\n\t\t\t}\n\n\t\t\tthis.texture = texture;\n\n\t\t}\n\n\t}\n\n\tgetMesh( cameraXR ) {\n\n\t\tif ( this.texture !== null ) {\n\n\t\t\tif ( this.mesh === null ) {\n\n\t\t\t\tconst viewport = cameraXR.cameras[ 0 ].viewport;\n\t\t\t\tconst material = new ShaderMaterial( {\n\t\t\t\t\tvertexShader: _occlusion_vertex,\n\t\t\t\t\tfragmentShader: _occlusion_fragment,\n\t\t\t\t\tuniforms: {\n\t\t\t\t\t\tdepthColor: { value: this.texture },\n\t\t\t\t\t\tdepthWidth: { value: viewport.z },\n\t\t\t\t\t\tdepthHeight: { value: viewport.w }\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tthis.mesh = new Mesh( new PlaneGeometry( 20, 20 ), material );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this.mesh;\n\n\t}\n\n\treset() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t}\n\n\tgetDepthTexture() {\n\n\t\treturn this.texture;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\n\t\tconst depthSensing = new WebXRDepthSensing();\n\t\tconst attributes = gl.getContextAttributes();\n\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst currentSize = new Vector2();\n\t\tlet currentPixelRatio = null;\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\tdepthSensing.reset();\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\trenderer.setPixelRatio( currentPixelRatio );\n\t\t\trenderer.setSize( currentSize.width, currentSize.height, false );\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\trenderer.getSize( currentSize );\n\n\t\t\t\tif ( session.renderState.layers === undefined ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glProjLayer.textureWidth, glProjLayer.textureHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0,\n\t\t\t\t\t\t\tresolveDepthBuffer: ( glProjLayer.ignoreDepthValues === false )\n\t\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getDepthTexture = function () {\n\n\t\t\treturn depthSensing.getDepthTexture();\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Check if the projection uses an infinite far plane.\n\t\t\tif ( projL[ 10 ] === - 1.0 ) {\n\n\t\t\t\t// Use the projection matrix from the left eye.\n\t\t\t\t// The camera offset is sufficient to include the view volumes\n\t\t\t\t// of both eyes (assuming symmetric projections).\n\t\t\t\tcamera.projectionMatrix.copy( cameraL.projectionMatrix );\n\t\t\t\tcamera.projectionMatrixInverse.copy( cameraL.projectionMatrixInverse );\n\n\t\t\t} else {\n\n\t\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t\t// although must now be relative to the new union camera.\n\t\t\t\tconst near2 = near + zOffset;\n\t\t\t\tconst far2 = far + zOffset;\n\t\t\t\tconst left2 = left - xOffset;\n\t\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tlet depthNear = camera.near;\n\t\t\tlet depthFar = camera.far;\n\n\t\t\tif ( depthSensing.texture !== null ) {\n\n\t\t\t\tif ( depthSensing.depthNear > 0 ) depthNear = depthSensing.depthNear;\n\t\t\t\tif ( depthSensing.depthFar > 0 ) depthFar = depthSensing.depthFar;\n\n\t\t\t}\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = depthNear;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = depthFar;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.hasDepthSensing = function () {\n\n\t\t\treturn depthSensing.texture !== null;\n\n\t\t};\n\n\t\tthis.getDepthSensingMesh = function () {\n\n\t\t\treturn depthSensing.getMesh( cameraXR );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tconst enabledFeatures = session.enabledFeatures;\n\n\t\t\t\tif ( enabledFeatures && enabledFeatures.includes( 'depth-sensing' ) ) {\n\n\t\t\t\t\tconst depthData = glBinding.getDepthInformation( views[ 0 ] );\n\n\t\t\t\t\tif ( depthData && depthData.isValid && depthData.texture ) {\n\n\t\t\t\t\t\tdepthSensing.init( renderer, depthData, session.renderState );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nconst _e1 = /*@__PURE__*/ new Euler();\nconst _m1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst envMap = materialProperties.envMap;\n\t\tconst envMapRotation = materialProperties.envMapRotation;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\t_e1.copy( envMapRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1.x *= - 1; _e1.y *= - 1; _e1.z *= - 1;\n\n\t\t\tif ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1.y *= - 1;\n\t\t\t\t_e1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tuniforms.envMapRotation.value.setFromMatrix4( _m1.makeRotationFromEuler( _e1 ) );\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.dispersion > 0 ) {\n\n\t\t\tuniforms.dispersion.value = material.dispersion;\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ); // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tif ( hasUniformChanged( uniform, i, j, cache ) === true ) {\n\n\t\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\t\tfor ( let k = 0; k < values.length; k ++ ) {\n\n\t\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t\t// TODO add integer and struct support\n\t\t\t\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\t\tuniform.__data[ 3 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\t\tuniform.__data[ 7 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\t\tuniform.__data[ 11 ] = 0;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, indexArray, cache ) {\n\n\t\tconst value = uniform.value;\n\t\tconst indexString = index + '_' + indexArray;\n\n\t\tif ( cache[ indexString ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tcache[ indexString ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ indexString ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\tconst cachedObject = cache[ indexString ];\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tif ( cachedObject !== value ) {\n\n\t\t\t\t\tcache[ indexString ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tfor ( let k = 0, kl = values.length; k < kl; k ++ ) {\n\n\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\tconst chunkOffset = offset % chunkSize; // offset in the current chunk\n\t\t\t\t\tconst chunkPadding = chunkOffset % info.boundary; // required padding to match boundary\n\t\t\t\t\tconst chunkStart = chunkOffset + chunkPadding; // the start position in the current chunk for the data\n\n\t\t\t\t\toffset += chunkPadding;\n\n\t\t\t\t\t// Check for chunk overflow\n\t\t\t\t\tif ( chunkStart !== 0 && ( chunkSize - chunkStart ) < info.storage ) {\n\n\t\t\t\t\t\t// Add padding and adjust offset\n\t\t\t\t\t\toffset += ( chunkSize - chunkStart );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following two properties will be used for partial buffer updates\n\t\t\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t\t// Update the global offset\n\t\t\t\t\toffset += info.storage;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tconst chunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t// float/int/bool\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = false,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && context instanceof WebGLRenderingContext ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer: WebGL 1 is not supported since r163.' );\n\n\t\t\t}\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis._outputColorSpace = SRGBColorSpace;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// camera matrices cache\n\n\t\tconst _currentProjectionMatrix = new Matrix4();\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _vector4 = new Vector4();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tlet _renderBackground = false;\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextName, contextAttributes ) {\n\n\t\t\treturn canvas.getContext( contextName, contextAttributes );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextName = 'webgl2';\n\n\t\t\t\t_gl = getContext( contextName, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextName ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\t\t\textensions.init();\n\n\t\t\tutils = new WebGLUtils( _gl, extensions );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters, utils );\n\n\t\t\tstate = new WebGLState( _gl );\n\n\t\t\tif ( capabilities.reverseDepthBuffer ) state.buffers.depth.setReversed( true );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, attributes );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) {\n\n\t\t\t\tbits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t_gl.clearDepth( this.capabilities.reverseDepthBuffer ? 0 : 1 );\n\n\t\t\t}\n\n\t\t\tif ( stencil ) {\n\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\n\n\t\t\t}\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tif ( object._multiDrawInstances !== null ) {\n\n\t\t\t\t\trenderer.renderMultiDrawInstances( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount, object._multiDrawInstances );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! extensions.get( 'WEBGL_multi_draw' ) ) {\n\n\t\t\t\t\t\tconst starts = object._multiDrawStarts;\n\t\t\t\t\t\tconst counts = object._multiDrawCounts;\n\t\t\t\t\t\tconst drawCount = object._multiDrawCount;\n\t\t\t\t\t\tconst bytesPerElement = index ? attributes.get( index ).bytesPerElement : 1;\n\t\t\t\t\t\tconst uniforms = properties.get( material ).currentProgram.getUniforms();\n\t\t\t\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\t\t\t\tuniforms.setValue( _gl, '_gl_DrawID', i );\n\t\t\t\t\t\t\trenderer.render( starts[ i ] / bytesPerElement, counts[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\trenderer.renderMultiDraw( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tfunction prepareMaterial( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\n\n\t\t\tif ( targetScene === null ) targetScene = scene;\n\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\n\t\t\tcurrentRenderState.init( camera );\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\n\n\t\t\ttargetScene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( scene !== targetScene ) {\n\n\t\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tcurrentRenderState.setupLights();\n\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\n\n\t\t\tconst materials = new Set();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( ! ( object.isMesh || object.isPoints || object.isLine || object.isSprite ) ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\n\t\t\t\t\t\t\tmaterials.add( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\n\t\t\t\t\t\tmaterials.add( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t\treturn materials;\n\n\t\t};\n\n\t\t// compileAsync\n\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\n\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\n\n\t\t\t// Wait for all the materials in the new object to indicate that they're\n\t\t\t// ready to be used before resolving the promise.\n\n\t\t\treturn new Promise( ( resolve ) => {\n\n\t\t\t\tfunction checkMaterialsReady() {\n\n\t\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\n\n\t\t\t\t\t\tif ( program.isReady() ) {\n\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\n\t\t\t\t\t\t\tmaterials.delete( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\n\n\t\t\t\t\tif ( materials.size === 0 ) {\n\n\t\t\t\t\t\tresolve( scene );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\n\n\t\t\t\t\t// If we can check the compilation status of the materials without\n\t\t\t\t\t// blocking then do so right away.\n\n\t\t\t\t\tcheckMaterialsReady();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\n\t\t\t\t\t// initialized a chance to finish.\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init( camera );\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tconst depthSensingMesh = _this.xr.getDepthSensingMesh();\n\n\t\t\t\tif ( depthSensingMesh !== null ) {\n\n\t\t\t\t\tprojectObject( depthSensingMesh, camera, - Infinity, _this.sortObjects );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t_renderBackground = xr.enabled === false || xr.isPresenting === false || xr.hasDepthSensing() === false;\n\t\t\tif ( _renderBackground ) {\n\n\t\t\t\tbackground.addToRenderList( currentRenderList, scene );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t\t// render scene\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\n\t\t\tcurrentRenderState.setupLights();\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tif ( transmissiveObjects.length > 0 ) {\n\n\t\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\t\trenderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, currentRenderState.state.camera );\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector4.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector4.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector4.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector4.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector4\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector4.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector4.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tif ( overrideMaterial !== null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( currentRenderState.state.transmissionRenderTarget[ camera.id ] === undefined ) {\n\n\t\t\t\tcurrentRenderState.state.transmissionRenderTarget[ camera.id ] = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: 4,\n\t\t\t\t\tstencilBuffer: stencil,\n\t\t\t\t\tresolveDepthBuffer: false,\n\t\t\t\t\tresolveStencilBuffer: false,\n\t\t\t\t\tcolorSpace: ColorManagement.workingColorSpace,\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\tconst transmissionRenderTarget = currentRenderState.state.transmissionRenderTarget[ camera.id ];\n\n\t\t\tconst activeViewport = camera.viewport || _currentViewport;\n\t\t\ttransmissionRenderTarget.setSize( activeViewport.z, activeViewport.w );\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\t// Remove viewport from camera to avoid nested render calls resetting viewport to it (e.g Reflector).\n\t\t\t// Transmission render pass requires viewport to match the transmissionRenderTarget.\n\t\t\tconst currentCameraViewport = camera.viewport;\n\t\t\tif ( camera.viewport !== undefined ) camera.viewport = undefined;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\n\n\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === false ) { // see #28131\n\n\t\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\t\tconst object = renderItem.object;\n\t\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\t\tconst material = renderItem.material;\n\t\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\n\t\t\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\tif ( currentCameraViewport !== undefined ) camera.viewport = currentCameraViewport;\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\t\t\tmaterialProperties.envMapRotation = ( materialProperties.environment !== null && material.envMap === null ) ? scene.environmentRotation : material.envMapRotation;\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = null;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction getUniformList( materialProperties ) {\n\n\t\t\tif ( materialProperties.uniformsList === null ) {\n\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\n\n\t\t\t}\n\n\t\t\treturn materialProperties.uniformsList;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.batching = parameters.batching;\n\t\t\tmaterialProperties.batchingColor = parameters.batchingColor;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.instancingMorph = parameters.instancingMorph;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batching === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isBatchedMesh && materialProperties.batching === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batchingColor === true && object.colorTexture === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batchingColor === false && object.colorTexture !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === true && object.morphTexture === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === false && object.morphTexture !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tif ( capabilities.reverseDepthBuffer ) {\n\n\t\t\t\t\t_currentProjectionMatrix.copy( camera.projectionMatrix );\n\n\t\t\t\t\ttoNormalizedProjectionMatrix( _currentProjectionMatrix );\n\t\t\t\t\ttoReversedProjectionMatrix( _currentProjectionMatrix );\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', _currentProjectionMatrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingIdTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingIdTexture', object._indirectTexture, textures );\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingColorTexture' );\n\t\t\t\tif ( object._colorsTexture !== null ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'batchingColorTexture', object._colorsTexture, textures );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshStandardMaterial && material.envMap === null && scene.environment !== null ) {\n\n\t\t\t\tm_uniforms.envMapIntensity.value = scene.environmentIntensity;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, currentRenderState.state.transmissionRenderTarget[ camera.id ] );\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t} else if ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t// check if the depth texture is already bound to the frame buffer and that it's been initialized\n\t\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\t\t\t\t\tif ( renderTargetProperties.__boundDepthTexture !== depthTexture ) {\n\n\t\t\t\t\t\t// check if the depth texture is compatible\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tdepthTexture !== null &&\n\t\t\t\t\t\t\tproperties.has( depthTexture ) &&\n\t\t\t\t\t\t\t( renderTarget.width !== depthTexture.image.width || renderTarget.height !== depthTexture.image.height )\n\t\t\t\t\t\t) {\n\n\t\t\t\t\t\t\tthrow new Error( 'WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Swap the depth buffer to the currently attached one\n\t\t\t\t\t\ttextures.setupDepthRenderbuffer( renderTarget );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixelsAsync = async function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\n\t\t\t\t}\n\n\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t// set the active frame buffer to the one we want to read\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t\tconst glBuffer = _gl.createBuffer();\n\t\t\t\t\t_gl.bindBuffer( _gl.PIXEL_PACK_BUFFER, glBuffer );\n\t\t\t\t\t_gl.bufferData( _gl.PIXEL_PACK_BUFFER, buffer.byteLength, _gl.STREAM_READ );\n\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), 0 );\n\n\t\t\t\t\t// reset the frame buffer to the currently set buffer before waiting\n\t\t\t\t\tconst currFramebuffer = _currentRenderTarget !== null ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, currFramebuffer );\n\n\t\t\t\t\t// check if the commands have finished every 8 ms\n\t\t\t\t\tconst sync = _gl.fenceSync( _gl.SYNC_GPU_COMMANDS_COMPLETE, 0 );\n\n\t\t\t\t\t_gl.flush();\n\n\t\t\t\t\tawait probeAsync( _gl, sync, 4 );\n\n\t\t\t\t\t// read the data and delete the buffer\n\t\t\t\t\t_gl.bindBuffer( _gl.PIXEL_PACK_BUFFER, glBuffer );\n\t\t\t\t\t_gl.getBufferSubData( _gl.PIXEL_PACK_BUFFER, 0, buffer );\n\t\t\t\t\t_gl.deleteBuffer( glBuffer );\n\t\t\t\t\t_gl.deleteSync( sync );\n\n\t\t\t\t\treturn buffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( texture, position = null, level = 0 ) {\n\n\t\t\t// support previous signature with position first\n\t\t\tif ( texture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\twarnOnce( 'WebGLRenderer: copyFramebufferToTexture function signature has changed.' );\n\n\t\t\t\tposition = arguments[ 0 ] || null;\n\t\t\t\ttexture = arguments[ 1 ];\n\n\t\t\t}\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\tconst x = position !== null ? position.x : 0;\n\t\t\tconst y = position !== null ? position.y : 0;\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, x, y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( srcTexture, dstTexture, srcRegion = null, dstPosition = null, level = 0 ) {\n\n\t\t\t// support previous signature with dstPosition first\n\t\t\tif ( srcTexture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\twarnOnce( 'WebGLRenderer: copyTextureToTexture function signature has changed.' );\n\n\t\t\t\tdstPosition = arguments[ 0 ] || null;\n\t\t\t\tsrcTexture = arguments[ 1 ];\n\t\t\t\tdstTexture = arguments[ 2 ];\n\t\t\t\tlevel = arguments[ 3 ] || 0;\n\t\t\t\tsrcRegion = null;\n\n\t\t\t}\n\n\t\t\tlet width, height, minX, minY;\n\t\t\tlet dstX, dstY;\n\t\t\tif ( srcRegion !== null ) {\n\n\t\t\t\twidth = srcRegion.max.x - srcRegion.min.x;\n\t\t\t\theight = srcRegion.max.y - srcRegion.min.y;\n\t\t\t\tminX = srcRegion.min.x;\n\t\t\t\tminY = srcRegion.min.y;\n\n\t\t\t} else {\n\n\t\t\t\twidth = srcTexture.image.width;\n\t\t\t\theight = srcTexture.image.height;\n\t\t\t\tminX = 0;\n\t\t\t\tminY = 0;\n\n\t\t\t}\n\n\t\t\tif ( dstPosition !== null ) {\n\n\t\t\t\tdstX = dstPosition.x;\n\t\t\t\tdstY = dstPosition.y;\n\n\t\t\t} else {\n\n\t\t\t\tdstX = 0;\n\t\t\t\tdstY = 0;\n\n\t\t\t}\n\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst currentUnpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst currentUnpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst currentUnpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst currentUnpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst currentUnpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ level ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, minX );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, minY );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, dstX, dstY, width, height, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, dstX, dstY, image.width, image.height, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, dstX, dstY, width, height, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, currentUnpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, currentUnpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, currentUnpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, currentUnpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, currentUnpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( srcTexture, dstTexture, srcRegion = null, dstPosition = null, level = 0 ) {\n\n\t\t\t// support previous signature with source box first\n\t\t\tif ( srcTexture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\twarnOnce( 'WebGLRenderer: copyTextureToTexture3D function signature has changed.' );\n\n\t\t\t\tsrcRegion = arguments[ 0 ] || null;\n\t\t\t\tdstPosition = arguments[ 1 ] || null;\n\t\t\t\tsrcTexture = arguments[ 2 ];\n\t\t\t\tdstTexture = arguments[ 3 ];\n\t\t\t\tlevel = arguments[ 4 ] || 0;\n\n\t\t\t}\n\n\t\t\tlet width, height, depth, minX, minY, minZ;\n\t\t\tlet dstX, dstY, dstZ;\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ level ] : srcTexture.image;\n\t\t\tif ( srcRegion !== null ) {\n\n\t\t\t\twidth = srcRegion.max.x - srcRegion.min.x;\n\t\t\t\theight = srcRegion.max.y - srcRegion.min.y;\n\t\t\t\tdepth = srcRegion.max.z - srcRegion.min.z;\n\t\t\t\tminX = srcRegion.min.x;\n\t\t\t\tminY = srcRegion.min.y;\n\t\t\t\tminZ = srcRegion.min.z;\n\n\t\t\t} else {\n\n\t\t\t\twidth = image.width;\n\t\t\t\theight = image.height;\n\t\t\t\tdepth = image.depth;\n\t\t\t\tminX = 0;\n\t\t\t\tminY = 0;\n\t\t\t\tminZ = 0;\n\n\t\t\t}\n\n\t\t\tif ( dstPosition !== null ) {\n\n\t\t\t\tdstX = dstPosition.x;\n\t\t\t\tdstY = dstPosition.y;\n\t\t\t\tdstZ = dstPosition.z;\n\n\t\t\t} else {\n\n\t\t\t\tdstX = 0;\n\t\t\t\tdstY = 0;\n\t\t\t\tdstZ = 0;\n\n\t\t\t}\n\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture || dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst currentUnpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst currentUnpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst currentUnpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst currentUnpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst currentUnpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, minX );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, minY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, minZ );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, dstX, dstY, dstZ, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, dstX, dstY, dstZ, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, dstX, dstY, dstZ, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, currentUnpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, currentUnpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, currentUnpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, currentUnpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, currentUnpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initRenderTarget = function ( target ) {\n\n\t\t\tif ( properties.get( target ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( target );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget outputColorSpace() {\n\n\t\treturn this._outputColorSpace;\n\n\t}\n\n\tset outputColorSpace( colorSpace ) {\n\n\t\tthis._outputColorSpace = colorSpace;\n\n\t\tconst gl = this.getContext();\n\t\tgl.drawingBufferColorSpace = colorSpace === DisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\t\tgl.unpackColorSpace = ColorManagement.workingColorSpace === LinearDisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\n\t}\n\n}\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\t\tthis.backgroundRotation = new Euler();\n\n\t\tthis.environmentIntensity = 1;\n\t\tthis.environmentRotation = new Euler();\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\t\tthis.backgroundRotation.copy( source.backgroundRotation );\n\n\t\tthis.environmentIntensity = source.environmentIntensity;\n\t\tthis.environmentRotation.copy( source.environmentRotation );\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\t\tdata.object.backgroundRotation = this.backgroundRotation.toArray();\n\n\t\tif ( this.environmentIntensity !== 1 ) data.object.environmentIntensity = this.environmentIntensity;\n\t\tdata.object.environmentRotation = this.environmentRotation.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.data.stride + this.offset + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tremoveLevel( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0; i < levels.length; i ++ ) {\n\n\t\t\tif ( levels[ i ].distance === distance ) {\n\n\t\t\t\tconst removedElements = levels.splice( i, 1 );\n\t\t\t\tthis.remove( removedElements[ 0 ].object );\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix$1 = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix$1;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\t\tthis.morphTexture = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$3 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.morphTexture !== null ) this.morphTexture = source.morphTexture.clone();\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tgetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tconst len = objectInfluences.length + 1; // All influences + the baseInfluenceSum\n\n\t\tconst dataIndex = index * len + 1; // Skip the baseInfluenceSum at the beginning\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tobjectInfluences[ i ] = array[ dataIndex + i ];\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ).fill( 1 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tsetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst len = objectInfluences.length + 1; // morphBaseInfluence + all influences\n\n\t\tif ( this.morphTexture === null ) {\n\n\t\t\tthis.morphTexture = new DataTexture( new Float32Array( len * this.count ), len, this.count, RedFormat, FloatType );\n\n\t\t}\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t}\n\n\t\tconst morphBaseInfluence = this.geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tconst dataIndex = len * index;\n\n\t\tarray[ dataIndex ] = morphBaseInfluence;\n\n\t\tarray.set( objectInfluences, dataIndex + 1 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\tif ( this.morphTexture !== null ) {\n\n\t\t\tthis.morphTexture.dispose();\n\t\t\tthis.morphTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( drawRange, z, index ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\t\t\t\tindex: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = drawRange.start;\n\t\titem.count = drawRange.count;\n\t\titem.z = z;\n\t\titem.index = index;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _invMatrixWorld = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\nconst _whiteColor = /*@__PURE__*/ new Color( 1, 1, 1 );\nconst _projScreenMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _forward = /*@__PURE__*/ new Vector3();\nconst _temp = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// @TODO: SkinnedMesh support?\n// @TODO: geometry.groups support?\n// @TODO: geometry.drawRange support?\n// @TODO: geometry.morphAttributes support?\n// @TODO: Support uniform parameter per geometry\n// @TODO: Add an \"optimize\" function to pack geometry and remove data gaps\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxInstanceCount() {\n\n\t\treturn this._maxInstanceCount;\n\n\t}\n\n\tconstructor( maxInstanceCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\t// stores visible, active, and geometry id per object\n\t\tthis._drawInfo = [];\n\n\t\t// instance ids that have been set as inactive, and are available to be overwritten\n\t\tthis._availableInstanceIds = [];\n\n\t\t// geometry information\n\t\tthis._drawRanges = [];\n\t\tthis._reservedRanges = [];\n\t\tthis._bounds = [];\n\n\t\tthis._maxInstanceCount = maxInstanceCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tthis._geometryInitialized = false;\n\t\tthis._geometryCount = 0;\n\t\tthis._multiDrawCounts = new Int32Array( maxInstanceCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxInstanceCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._multiDrawInstances = null;\n\t\tthis._visibilityChanged = true;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\t\tthis._indirectTexture = null;\n\t\tthis._colorsTexture = null;\n\n\t\tthis._initMatricesTexture();\n\t\tthis._initIndirectTexture();\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initIndirectTexture() {\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount );\n\t\tsize = Math.ceil( size );\n\n\t\tconst indirectArray = new Uint32Array( size * size );\n\t\tconst indirectTexture = new DataTexture( indirectArray, size, size, RedIntegerFormat, UnsignedIntType );\n\n\t\tthis._indirectTexture = indirectTexture;\n\n\t}\n\n\t_initColorsTexture() {\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount );\n\t\tsize = Math.ceil( size );\n\n\t\t// 4 floats per RGBA pixel initialized to white\n\t\tconst colorsArray = new Float32Array( size * size * 4 ).fill( 1 );\n\t\tconst colorsTexture = new DataTexture( colorsArray, size, size, RGBAFormat, FloatType );\n\t\tcolorsTexture.colorSpace = ColorManagement.workingColorSpace;\n\n\t\tthis._colorsTexture = colorsTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new BufferAttribute( dstArray, itemSize, normalized );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\t// Reserve last u16 index for primitive restart.\n\t\t\t\tconst indexArray = maxVertexCount > 65535\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry attributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst drawInfo = this._drawInfo;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0, l = drawInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( drawInfo[ i ].active === false ) continue;\n\n\t\t\tconst geometryId = drawInfo[ i ].geometryIndex;\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst drawInfo = this._drawInfo;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0, l = drawInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( drawInfo[ i ].active === false ) continue;\n\n\t\t\tconst geometryId = drawInfo[ i ].geometryIndex;\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddInstance( geometryId ) {\n\n\t\tconst atCapacity = this._drawInfo.length >= this.maxInstanceCount;\n\n\t\t// ensure we're not over geometry\n\t\tif ( atCapacity && this._availableInstanceIds.length === 0 ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum item count reached.' );\n\n\t\t}\n\n\t\tconst instanceDrawInfo = {\n\t\t\tvisible: true,\n\t\t\tactive: true,\n\t\t\tgeometryIndex: geometryId,\n\t\t};\n\n\t\tlet drawId = null;\n\n\t\t// Prioritize using previously freed instance ids\n\t\tif ( this._availableInstanceIds.length > 0 ) {\n\n\t\t\tdrawId = this._availableInstanceIds.pop();\n\t\t\tthis._drawInfo[ drawId ] = instanceDrawInfo;\n\n\t\t} else {\n\n\t\t\tdrawId = this._drawInfo.length;\n\t\t\tthis._drawInfo.push( instanceDrawInfo );\n\n\t\t}\n\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = matricesTexture.image.data;\n\t\t_identityMatrix.toArray( matricesArray, drawId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\tconst colorsTexture = this._colorsTexture;\n\t\tif ( colorsTexture ) {\n\n\t\t\t_whiteColor.toArray( colorsTexture.image.data, drawId * 4 );\n\t\t\tcolorsTexture.needsUpdate = true;\n\n\t\t}\n\n\t\treturn drawId;\n\n\t}\n\n\taddGeometry( geometry, vertexCount = - 1, indexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\t// ensure we're not over geometry\n\t\tif ( this._drawInfo.length >= this._maxInstanceCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum item count reached.' );\n\n\t\t}\n\n\t\t// get the necessary range fo the geometry\n\t\tconst reservedRange = {\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t};\n\n\t\tlet lastRange = null;\n\t\tconst reservedRanges = this._reservedRanges;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst bounds = this._bounds;\n\t\tif ( this._geometryCount !== 0 ) {\n\n\t\t\tlastRange = reservedRanges[ reservedRanges.length - 1 ];\n\n\t\t}\n\n\t\tif ( vertexCount === - 1 ) {\n\n\t\t\treservedRange.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexCount = vertexCount;\n\n\t\t}\n\n\t\tif ( lastRange === null ) {\n\n\t\t\treservedRange.vertexStart = 0;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexStart = lastRange.vertexStart + lastRange.vertexCount;\n\n\t\t}\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tif ( indexCount\t=== - 1 ) {\n\n\t\t\t\treservedRange.indexCount = index.count;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexCount = indexCount;\n\n\t\t\t}\n\n\t\t\tif ( lastRange === null ) {\n\n\t\t\t\treservedRange.indexStart = 0;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexStart = lastRange.indexStart + lastRange.indexCount;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (\n\t\t\treservedRange.indexStart !== - 1 &&\n\t\t\treservedRange.indexStart + reservedRange.indexCount > this._maxIndexCount ||\n\t\t\treservedRange.vertexStart + reservedRange.vertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\t// update id\n\t\tconst geometryId = this._geometryCount;\n\t\tthis._geometryCount ++;\n\n\t\t// add the reserved range and draw range objects\n\t\treservedRanges.push( reservedRange );\n\t\tdrawRanges.push( {\n\t\t\tstart: hasIndex ? reservedRange.indexStart : reservedRange.vertexStart,\n\t\t\tcount: - 1\n\t\t} );\n\t\tbounds.push( {\n\t\t\tboxInitialized: false,\n\t\t\tbox: new Box3(),\n\n\t\t\tsphereInitialized: false,\n\t\t\tsphere: new Sphere()\n\t\t} );\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( geometryId, geometry ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst reservedRange = this._reservedRanges[ geometryId ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > reservedRange.indexCount ||\n\t\t\tgeometry.attributes.position.count > reservedRange.vertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry over\n\t\tconst vertexStart = reservedRange.vertexStart;\n\t\tconst vertexCount = reservedRange.vertexCount;\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = vertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\t\t\tdstAttribute.addUpdateRange( vertexStart * itemSize, vertexCount * itemSize );\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = reservedRange.indexStart;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedRange.indexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\t\t\tdstIndex.addUpdateRange( indexStart, reservedRange.indexCount );\n\n\t\t}\n\n\t\t// store the bounding boxes\n\t\tconst bound = this._bounds[ geometryId ];\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tbound.box.copy( geometry.boundingBox );\n\t\t\tbound.boxInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.boxInitialized = false;\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tbound.sphere.copy( geometry.boundingSphere );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.sphereInitialized = false;\n\n\t\t}\n\n\t\t// set drawRange count\n\t\tconst drawRange = this._drawRanges[ geometryId ];\n\t\tconst posAttr = geometry.getAttribute( 'position' );\n\t\tdrawRange.count = hasIndex ? srcIndex.count : posAttr.count;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn geometryId;\n\n\t}\n\n\t/*\n\tdeleteGeometry( geometryId ) {\n\n\t\t// TODO: delete geometry and associated instances\n\n\t}\n\t*/\n\n\tdeleteInstance( instanceId ) {\n\n\t\tconst drawInfo = this._drawInfo;\n\t\tif ( instanceId >= drawInfo.length || drawInfo[ instanceId ].active === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdrawInfo[ instanceId ].active = false;\n\t\tthis._availableInstanceIds.push( instanceId );\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( geometryId, target ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst bound = this._bounds[ geometryId ];\n\t\tconst box = bound.box;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.boxInitialized === false ) {\n\n\t\t\tbox.makeEmpty();\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ geometryId ];\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tbound.boxInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( box );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( geometryId, target ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst bound = this._bounds[ geometryId ];\n\t\tconst sphere = bound.sphere;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.sphereInitialized === false ) {\n\n\t\t\tsphere.makeEmpty();\n\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ geometryId ];\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( sphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( instanceId, matrix ) {\n\n\t\t// @TODO: Map geometryId to index of the arrays because\n\t\t//        optimize() can make geometryId mismatch the index\n\n\t\tconst drawInfo = this._drawInfo;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tif ( instanceId >= drawInfo.length || drawInfo[ instanceId ].active === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmatrix.toArray( matricesArray, instanceId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( instanceId, matrix ) {\n\n\t\tconst drawInfo = this._drawInfo;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tif ( instanceId >= drawInfo.length || drawInfo[ instanceId ].active === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn matrix.fromArray( matricesArray, instanceId * 16 );\n\n\t}\n\n\tsetColorAt( instanceId, color ) {\n\n\t\tif ( this._colorsTexture === null ) {\n\n\t\t\tthis._initColorsTexture();\n\n\t\t}\n\n\t\t// @TODO: Map id to index of the arrays because\n\t\t//        optimize() can make id mismatch the index\n\n\t\tconst colorsTexture = this._colorsTexture;\n\t\tconst colorsArray = this._colorsTexture.image.data;\n\t\tconst drawInfo = this._drawInfo;\n\t\tif ( instanceId >= drawInfo.length || drawInfo[ instanceId ].active === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcolor.toArray( colorsArray, instanceId * 4 );\n\t\tcolorsTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( instanceId, color ) {\n\n\t\tconst colorsArray = this._colorsTexture.image.data;\n\t\tconst drawInfo = this._drawInfo;\n\t\tif ( instanceId >= drawInfo.length || drawInfo[ instanceId ].active === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn color.fromArray( colorsArray, instanceId * 4 );\n\n\t}\n\n\tsetVisibleAt( instanceId, value ) {\n\n\t\t// if the geometry is out of range, not active, or visibility state\n\t\t// does not change then return early\n\t\tconst drawInfo = this._drawInfo;\n\t\tif (\n\t\t\tinstanceId >= drawInfo.length ||\n\t\t\tdrawInfo[ instanceId ].active === false ||\n\t\t\tdrawInfo[ instanceId ].visible === value\n\t\t) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdrawInfo[ instanceId ].visible = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( instanceId ) {\n\n\t\t// return early if the geometry is out of range or not active\n\t\tconst drawInfo = this._drawInfo;\n\t\tif ( instanceId >= drawInfo.length || drawInfo[ instanceId ].active === false ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn drawInfo[ instanceId ].visible;\n\n\t}\n\n\tsetGeometryIdAt( instanceId, geometryId ) {\n\n\t\t// return early if the geometry is out of range or not active\n\t\tconst drawInfo = this._drawInfo;\n\t\tif ( instanceId >= drawInfo.length || drawInfo[ instanceId ].active === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// check if the provided geometryId is within the valid range\n\t\tif ( geometryId < 0 || geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tdrawInfo[ instanceId ].geometryIndex = geometryId;\n\n\t\treturn this;\n\n\t}\n\n\tgetGeometryIdAt( instanceId ) {\n\n\t\tconst drawInfo = this._drawInfo;\n\t\tif ( instanceId >= drawInfo.length || drawInfo[ instanceId ].active === false ) {\n\n\t\t\treturn - 1;\n\n\t\t}\n\n\t\treturn drawInfo[ instanceId ].geometryIndex;\n\n\t}\n\n\tgetGeometryRangeAt( geometryId, target = {} ) {\n\n\t\tif ( geometryId < 0 || geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst drawRange = this._drawRanges[ geometryId ];\n\n\t\ttarget.start = drawRange.start;\n\t\ttarget.count = drawRange.count;\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst drawInfo = this._drawInfo;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0, l = drawInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( ! drawInfo[ i ].visible || ! drawInfo[ i ].active ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst geometryId = drawInfo[ i ].geometryIndex;\n\t\t\tconst drawRange = drawRanges[ geometryId ];\n\t\t\t_mesh.geometry.setDrawRange( drawRange.start, drawRange.count );\n\n\t\t\t// ge the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( geometryId, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( geometryId, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._drawRanges = source._drawRanges.map( range => ( { ...range } ) );\n\t\tthis._reservedRanges = source._reservedRanges.map( range => ( { ...range } ) );\n\n\t\tthis._drawInfo = source._drawInfo.map( inf => ( { ...inf } ) );\n\t\tthis._bounds = source._bounds.map( bound => ( {\n\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\tbox: bound.box.clone(),\n\n\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\tsphere: bound.sphere.clone()\n\t\t} ) );\n\n\t\tthis._maxInstanceCount = source._maxInstanceCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.data.slice();\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture = source._colorsTexture.clone();\n\t\t\tthis._colorsTexture.image.data = this._colorsTexture.image.data.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\n\t\tthis._indirectTexture.dispose();\n\t\tthis._indirectTexture = null;\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture.dispose();\n\t\t\tthis._colorsTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst drawInfo = this._drawInfo;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\tconst indirectTexture = this._indirectTexture;\n\t\tconst indirectArray = indirectTexture.image.data;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_projScreenMatrix$2\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_projScreenMatrix$2,\n\t\t\t\trenderer.coordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet count = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_invMatrixWorld.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _invMatrixWorld );\n\t\t\t_forward.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld ).transformDirection( _invMatrixWorld );\n\n\t\t\tfor ( let i = 0, l = drawInfo.length; i < l; i ++ ) {\n\n\t\t\t\tif ( drawInfo[ i ].visible && drawInfo[ i ].active ) {\n\n\t\t\t\t\tconst geometryId = drawInfo[ i ].geometryIndex;\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst z = _temp.subVectors( _sphere$2.center, _vector$5 ).dot( _forward );\n\t\t\t\t\t\t_renderList.push( drawRanges[ geometryId ], z, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ count ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ count ] = item.count;\n\t\t\t\tindirectArray[ count ] = item.index;\n\t\t\t\tcount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = drawInfo.length; i < l; i ++ ) {\n\n\t\t\t\tif ( drawInfo[ i ].visible && drawInfo[ i ].active ) {\n\n\t\t\t\t\tconst geometryId = drawInfo[ i ].geometryIndex;\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst range = drawRanges[ geometryId ];\n\t\t\t\t\t\tmultiDrawStarts[ count ] = range.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ count ] = range.count;\n\t\t\t\t\t\tindirectArray[ count ] = i;\n\t\t\t\t\t\tcount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tindirectTexture.needsUpdate = true;\n\t\tthis._multiDrawCount = count;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vStart = /*@__PURE__*/ new Vector3();\nconst _vEnd = /*@__PURE__*/ new Vector3();\n\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nconst _intersectPointOnRay = /*@__PURE__*/ new Vector3();\nconst _intersectPointOnSegment = /*@__PURE__*/ new Vector3();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_vStart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_vEnd.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _vStart.distanceTo( _vEnd );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst a = index.getX( end - 1 );\n\t\t\t\tconst b = index.getX( start );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, i, i + 1 );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, end - 1, start );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, raycaster, ray, thresholdSq, a, b ) {\n\n\tconst positionAttribute = object.geometry.attributes.position;\n\n\t_vStart.fromBufferAttribute( positionAttribute, a );\n\t_vEnd.fromBufferAttribute( positionAttribute, b );\n\n\tconst distSq = ray.distanceSqToSegment( _vStart, _vEnd, _intersectPointOnRay, _intersectPointOnSegment );\n\n\tif ( distSq > thresholdSq ) return;\n\n\t_intersectPointOnRay.applyMatrix4( object.matrixWorld ); // Move back to world space for distance calculation\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectPointOnRay );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\treturn {\n\n\t\tdistance: distance,\n\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t// point: raycaster.ray.at( distance ),\n\t\tpoint: _intersectPointOnSegment.clone().applyMatrix4( object.matrixWorld ),\n\t\tindex: a,\n\t\tface: null,\n\t\tfaceIndex: null,\n\t\tbarycoord: null,\n\t\tobject: object\n\n\t};\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tfaceIndex: null,\n\t\t\tbarycoord: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tif ( radiusTop > 0 ) {\n\n\t\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\t\tgroupCount += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( radiusBottom > 0 ) {\n\n\t\t\t\t\t\tindices.push( b, c, d );\n\t\t\t\t\t\tgroupCount += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._dispersion = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget dispersion() {\n\n\t\treturn this._dispersion;\n\n\t}\n\n\tset dispersion( value ) {\n\n\t\tif ( this._dispersion > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._dispersion = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.dispersion = source.dispersion;\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\n// DefaultInterpolation is inherited;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name = '', duration = - 1, tracks = [], blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'X-File-Size' ) || response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}, ( e ) => {\n\n\t\t\t\t\t\t\t\t\tcontroller.error( e );\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\t\tif ( this.target !== undefined ) data.object.target = this.target.uuid;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.intensity = 1;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.intensity = source.intensity;\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.intensity !== 1 ) object.intensity = this.intensity;\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = this.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.dispersion !== undefined ) material.dispersion = json.dispersion;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapRotation !== undefined ) material.envMapRotation.fromArray( json.envMapRotation );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tcreateMaterialFromType( type ) {\n\n\t\treturn MaterialLoader.createMaterialFromType( type );\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) { // @deprecated, r165\n\n\t\tconsole.warn( 'THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead.' );\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\t\t\t\tif ( data.backgroundRotation !== undefined ) object.backgroundRotation.fromArray( data.backgroundRotation );\n\n\t\t\t\tif ( data.environmentIntensity !== undefined ) object.environmentIntensity = data.environmentIntensity;\n\t\t\t\tif ( data.environmentRotation !== undefined ) object.environmentRotation.fromArray( data.environmentRotation );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxInstanceCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxInstanceCount = data.maxInstanceCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\t\t\t\tif ( data.colorsTexture !== undefined ) object._colorsTexture = getTexture( data.colorsTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.intensity !== undefined ) object.shadow.intensity = data.shadow.intensity;\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tbindLightTargets( object ) {\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isDirectionalLight || child.isSpotLight ) {\n\n\t\t\t\tconst uuid = child.target;\n\n\t\t\t\tconst target = object.getObjectByProperty( 'uuid', uuid );\n\n\t\t\t\tif ( target !== undefined ) {\n\n\t\t\t\t\tchild.target = target;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.target = new Object3D();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\t// If cached is a promise, wait for it to resolve\n\t\t\tif ( cached.then ) {\n\n\t\t\t\tcached.then( imageBitmap => {\n\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} ).catch( e => {\n\n\t\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\t} );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t\treturn imageBitmap;\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tCache.remove( url );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tCache.add( url, promise );\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn performance.now();\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop( delay = 0 ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop( this.context.currentTime + delay );\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.isPlaying === true && this.source.detune !== undefined ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\n\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\n\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tsetFromXRController( controller ) {\n\n\t\t_matrix.identity().extractRotation( controller.matrixWorld );\n\n\t\tthis.ray.origin.setFromMatrixPosition( controller.matrixWorld );\n\t\tthis.ray.direction.set( 0, 0, - 1 ).applyMatrix4( _matrix );\n\n\t\treturn this;\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersect( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersect( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersect( object, raycaster, intersects, recursive ) {\n\n\tlet propagate = true;\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tconst result = object.raycast( raycaster, intersects );\n\n\t\tif ( result === false ) propagate = false;\n\n\t}\n\n\tif ( propagate === true && recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersect( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * phi (the polar angle) is measured from the positive y-axis. The positive y-axis is up.\n * theta (the azimuthal angle) is measured from the positive z-axis.\n */\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix2 {\n\n\tconstructor( n11, n12, n21, n22 ) {\n\n\t\tMatrix2.prototype.isMatrix2 = true;\n\n\t\tthis.elements = [\n\t\t\t1, 0,\n\t\t\t0, 1,\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n21, n22 );\n\n\t\t}\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\t\t\t1, 0,\n\t\t\t0, 1,\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( n11, n12, n21, n22 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 2 ] = n12;\n\t\tte[ 1 ] = n21; te[ 3 ] = n22;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x >= this.min.x && point.x <= this.max.x &&\n\t\t\tpoint.y >= this.min.y && point.y <= this.max.y;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x >= this.min.x && box.min.x <= this.max.x &&\n\t\t\tbox.max.y >= this.min.y && box.min.y <= this.max.y;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t// update the local matrix based on the parent and light target transforms\n\t\tif ( this.parent ) {\n\n\t\t\tthis.parent.updateWorldMatrix( true );\n\n\t\t\tthis.matrix\n\t\t\t\t.copy( this.parent.matrixWorld )\n\t\t\t\t.invert()\n\t\t\t\t.multiply( this.light.matrixWorld );\n\n\t\t} else {\n\n\t\t\tthis.matrix.copy( this.light.matrixWorld );\n\n\t\t}\n\n\t\tthis.matrixWorld.copy( this.light.matrixWorld );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nclass Controls extends EventDispatcher {\n\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\n\t\tthis.enabled = true;\n\n\t\tthis.state = - 1;\n\n\t\tthis.keys = {};\n\t\tthis.mouseButtons = { LEFT: null, MIDDLE: null, RIGHT: null };\n\t\tthis.touches = { ONE: null, TWO: null };\n\n\t}\n\n\tconnect() {}\n\n\tdisconnect() {}\n\n\tdispose() {}\n\n\tupdate( /* delta */ ) {}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget { // @deprecated, r162\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tconsole.warn( 'THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the \"count\" parameter to enable MRT.' );\n\n\t\tsuper( width, height, { ...options, count } );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, Controls, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearDisplayP3ColorSpace, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix2, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeutralToneMapping, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, P3Primaries, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBDepthPacking, RGBFormat, RGBIntegerFormat, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGDepthPacking, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, Rec709Primaries, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TextureUtils, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedInt5999Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, createCanvasElement };\n","import * as THREE from 'three';\n\nconsole.log(THREE);"]}